export default [{"url": "https://cfp.devoxx.be/2017/talk/PUM-8097/Streaming_Data_Workshop", "abstract": "Dealing with real-time, in-memory, streaming data is a unique challenge and with the advent of the smartphone and IoT (trillions of internet connected devices), we are witnessing an exponential growth in data at scale. Learning how to implement architectures that handle real-time streaming data, where data is flowing constantly, and combine it with analysis and instant search capabilities is key for developing robust and scalable services and applications.\nIn this lab session, we will look at how to implement an architecture like this, using reactive open source frameworks. The streaming data architecture has the following tiers:\n\nData collection tier\nData transport tier\nAnalysis tier\nIn-Memory data store tier\nData access tier\nClient tier\n\nAn architecture based around the Swiss rail transport system will be use throughout the lab.\nLab session technologies: Java (attendees must be comfortable with Java 8), Infinispan, Vert.x, OpenShift.\n\n\n\u00a0data streaming\n\u00a0\n\n\n\u00a0Reactive Programming\n\u00a0\n\n\n\u00a0Containers\n\u00a0\n\n\n\u00a0Vert.x\n\u00a0\n\n\n\u00a0Infinispan", "confName": "Devoxx, Belgium 2017", "title": "Streaming Data Workshop"}, {"url": "https://cfp.devoxx.be/2017/talk/WRS-4063/Empathetic_communication_at_work", "abstract": "Communication is the one skill that will never be obsolete. Why, then, are so many of us intimidated by working on or beefing up our communication strategies? We can all be great communicators, we just need to learn to approach it from a place of empathy. This interactive workshop tackles your communications fears and weaknesses head on with a full day focused on both sides of the conversation spectrum: speaking and listening. The main goal of this workshop is to learn how to approach every interaction from a place of empathy.\n\nUnderstand the true purpose of listening\nLearn to shift listening into an action-based activity\nIdentifying biases and learn how to combat them\nLearn how to fight fair and use those disagreements as gateways to collaboration\nLearn how to craft responses that best helps your listeners understand and embrace your message\n\n\n\n\u00a0communication\n\u00a0\n\n\n\u00a0collaboration\n\u00a0\n\n\n\u00a0Community networking\n\u00a0\n\n\n\u00a0empathy", "confName": "Devoxx, Belgium 2017", "title": "Empathetic communication at work"}, {"url": "https://cfp.devoxx.be/2017/talk/MCN-7281/Kotlin_Deep_Dive", "abstract": "Let\u2019s take you on a journey of Kotlin, the language created by Jetbrains for the JVM. Since the announcement that Google made in May we have seen an increase in interest in this language. In this talk we will try to cover as much as possible about the language in a deep dive. In the first part we will create a Rest API with Kotlin and show you the possibilities in using Kotlin as a server side language. In part 2 we will consume the Rest API with an Android app. In both parts we will use different features, so you get a good understanding of Kotlin.\n\n\n\u00a0Kotlin\n\u00a0\n\n\n\u00a0Android\n\u00a0\n\n\n\u00a0Google", "confName": "Devoxx, Belgium 2017", "title": "Kotlin Deep Dive"}, {"url": "https://cfp.devoxx.be/2017/talk/RZM-3323/Testing_Java_Microservices", "abstract": "With traditional software unit tests, there's never a guarantee that an application will actually function correctly in the production environment. And when you add microservices, remote resources that are accessible over a network, into the mix, testing is more tricky. To make things even harder, microservices typically need to collaborate with additional network-based microservices, making testing even more challenging.\nIn this session you'll learn test strategies that solve the most common issues you are likely to encounter when writing tests for microservices architecture. Also you'll learn how tools such as Arquillian, JUnit, Docker or techniques suck as service virtualization or consumer-driven testing can help you on this task.\n\n\n\u00a0MicroServices\n\u00a0\n\n\n\u00a0testing\n\u00a0\n\n\n\u00a0Continuous Delivery", "confName": "Devoxx, Belgium 2017", "title": "Testing Java Microservices"}, {"url": "https://cfp.devoxx.be/2017/talk/ZZD-8893/Advances_in_machine_learning,_explained_for_software_engineers", "abstract": "The hottest topic in computer science today is machine learning and deep neural networks. Many problems deemed \"impossible\" only 5 years ago have now been solved by deep learning: playing GO, recognising what is in an image, translating languages, ...\nMany software developers are eager to adopt these new technologies as soon as they come out of research labs and the goal of this session is to equip you to do so. Last year at Devoxx, I explained the basic principles behind neural networks. This year, we will focus on neural network architectures, dive into the most recent advances in the field and give you tips, best practices and pointers to apply these techniques in your projects. No PhD required.\nThis university session will cover the newest deep learning developments in image recognition, natural language processing and reinforcement learning. Watching last year's recording beforehand (https://youtu.be/vq2nnJ4g6N0) is a good idea but all the necessary concepts will be reexplained.\n\n\n\u00a0TensorFlow\n\u00a0\n\n\n\u00a0Cloud Machine Learning\n\u00a0\n\n\n\u00a0Neural Networks", "confName": "Devoxx, Belgium 2017", "title": "Advances in machine learning, explained for software engineers"}, {"url": "https://cfp.devoxx.be/2017/talk/RYZ-3811/From_Spring_Boot_1_in_Java_to_Spring_Boot_2_in_Kotlin", "abstract": "Mark and S\u00e9bastien will lead a live coding deep dive to show you how to transform a Spring Boot 1 web application written in Java to a Spring Boot 2 application written in Kotlin. This deep dive session will introduce you to various Kotlin features (null safety, data classes, DSLs, extensions, etc.) and explain how you can leverage Spring Framework 5.0 and Spring Data Kay dedicated Kotlin support. Both Spring MVC and Spring WebFlux will be covered. No prior knowledge of Kotlin is required.\n\n\n\u00a0Spring Boot\n\u00a0\n\n\n\u00a0Kotlin\n\u00a0\n\n\n\u00a0Spring Framework 5", "confName": "Devoxx, Belgium 2017", "title": "From Spring Boot 1 in Java to Spring Boot 2 in Kotlin"}, {"url": "https://cfp.devoxx.be/2017/talk/RVU-5636/Building_a_practical_Blockchain_with_Hyperledger_Fabric", "abstract": "During this hands-on we will build our own practical blockchain using the open-source, freely available Hyperledger Fabric. At the start of the presentation I will shortly introduce The Hyperledger project founded by the Linux Foundation and choice of Hyperledger Fabric in relation to other (private) blockchains. The hands-on lab will go through the pre-requirements, how to run a blockchain, generating artifacts, starting and stopping the netword and writing your first blockchain application. At the end of this Hands-on you will have setup your own working blockchain and understand the concepts behind it.\n\n\n\u00a0Blockchain\n\u00a0\n\n\n\u00a0Live Coding & Demos\n\u00a0\n\n\n\u00a0Docker Cloud - Kubernetes", "confName": "Devoxx, Belgium 2017", "title": "Building a practical Blockchain with Hyperledger Fabric"}, {"url": "https://cfp.devoxx.be/2017/talk/EVE-8066/Event_storming_a_DDD%2FMicroService_landscape_using_post-it's_and_markers", "abstract": "During this hands-on workshop you'll learn about Domain Driven Design, CQRS, Event Sourcing and Microservices. You'll learn all of this during an active workshop standing up and contributing with a marker and post-it's in your hand. We'll be extracting events from a hypothetically business case. The workshop will cover some theory but 80% of our time will be spent hands-on in small groups of 4-6 people. After this workshop you'll have learned how to pick and choose the boundaries of your isolated Microservices as Bounded Context's, how to thread events as first-class citizens and how to present them to the users.\n\n\n\u00a0architecture\n\u00a0\n\n\n\u00a0MicroServices\n\u00a0\n\n\n\u00a0Event Sourcing\n\u00a0\n\n\n\u00a0domain model", "confName": "Devoxx, Belgium 2017", "title": "Event storming a DDD/MicroService landscape using post-it's and markers"}, {"url": "https://cfp.devoxx.be/2017/talk/ZML-0816/Conversational_Bots_:_Amazon_Lex,_IBM_Watson,_Microsoft_Bot_and_Google_Assistant", "abstract": "A unique Deep Dive covering the 4 Chatbots on the market\nEvery speaker has 30 min to present :\n- what is possible to do\n- how to extend the conversation framework\n- what are the limitations\n- what is expected in the future\nFollowing by 5 min Q&A\n\n\n\u00a0chat bots\n\u00a0\n\n\n\u00a0AI\n\u00a0\n\n\n\u00a0chat user interface\n\u00a0\n\n\n\u00a0conversations\n\u00a0\n\n\n\u00a0Voice Recognition", "confName": "Devoxx, Belgium 2017", "title": "Conversational Bots : Amazon Lex, IBM Watson, Microsoft Bot and Google Assistant"}, {"url": "https://cfp.devoxx.be/2017/talk/KSB-3519/Collectors_in_the_wild!", "abstract": "The Collector API has been added to the JDK 8, and was left in the shadow of the Stream API. It is quite logical, since a collector is made to consume the elements of a stream: no Stream, no Collector. We have a set of ready to use, very powerful collectors in the Collectors class: toList and groupingBy, to name a few. Those two facts hide the collector model to process data, and how powerful and efficient is this API.\nThis in depth talk is all about collectors: those available, because we need to know them, those that we can create, those we had no idea they could be created, and the others, as there is in fact no limit to what can be done with this API. The concept of downstream collector will be used to show how we can write entire data processing pipelines using collectors only, and pass them as parameters to other pipelines.\nWe will be careful about keeping a high level of readability in our code, and also talk about performances.\nThis talks is composed of slides and live coding on simple and complex examples.\n\n\n\u00a0Stream API\n\u00a0\n\n\n\u00a0Java 1.8\n\u00a0\n\n\n\u00a0Java Streams API", "confName": "Devoxx, Belgium 2017", "title": "Collectors in the wild!"}, {"url": "https://cfp.devoxx.be/2017/talk/RFO-3176/Neural_Networks:_Walkthrough", "abstract": "You pick up the keyboard, and select 'tanh'. 'Play'. The epochs rack up...\nSomething doesn't feel right, things aren't converging, your HP is decreasing. But you've seen people do this before... The FAQ is useless, and the documentation is like boss level 99. You know it's possible - but What The Fowler is 'tanh' anyway? And How The Fortran does this work?\nNeural Networks are hard. But don't worry, there is a walkthrough for this, and it has pictures.\n\n\n\u00a0Neural Networks\n\u00a0\n\n\n\u00a0Machine learning beginners\n\u00a0\n\n\n\u00a0Machine learning\n\u00a0\n\n\n\u00a0Artificial Intelligence", "confName": "Devoxx, Belgium 2017", "title": "Neural Networks: Walkthrough"}, {"url": "https://cfp.devoxx.be/2017/talk/FHE-0567/Easy_microservices_with_JHipster", "abstract": "10,000 microservices are generated each month using JHipster!\nDuring this in-depth session by the two JHipster lead developers, we\u2019ll detail:\n\nHow to develop and deploy microservices easily\nScalability and failover of microservices\nThe JHipster Registry for scaling, configuring and monitoring microservices\nCommon architecture patterns and pitfalls\n\n\n\n\u00a0Spring Boot\n\u00a0\n\n\n\u00a0Angular\n\u00a0\n\n\n\u00a0MicroServices\n\u00a0\n\n\n\u00a0Cloud Native Applications", "confName": "Devoxx, Belgium 2017", "title": "Easy microservices with JHipster"}, {"url": "https://cfp.devoxx.be/2017/talk/DII-1775/Slice_&_Dice_your_Monolith_with_Domain-Driven_Design_", "abstract": "Aren't you tired of hearing that Domain-Driven Design and Bounded Contexts are the \"solution\" for proper slicing your legacy monolithic application? But yet nobody shows you how! Well, not anymore.\nWe'll take 20+ years of experience on this field and pack everything on this intensive deep dive session. We'll perform a live coding session starting with a legacy monolith with an anemic domain model. Then we'll constant refactor & restructure the code to show how can we properly encapsulate data and behavior on Bounded Contexts. After that we'll slice & dice code and data and consider some evolutionary steps for your integration. We got it covered: baby steps, CQRS, Event Sourcing, and more! Everything done from a practical and hands-on approach until you (maybe) can reach the eden of distributed Domain Events within your application.\n\n\n\u00a0MicroServices\n\u00a0\n\n\n\u00a0domain model\n\u00a0\n\n\n\u00a0CQRS\n\u00a0\n\n\n\u00a0Event Sourcing", "confName": "Devoxx, Belgium 2017", "title": "Slice & Dice your Monolith with Domain-Driven Design "}, {"url": "https://cfp.devoxx.be/2017/talk/HCR-4774/Behavior_driven_integration_with_Cucumber_and_Citrus", "abstract": "The concept of behavior driven development (BDD) is quite simple. Business analysts and domain experts describe how the application should behave using Gherkin (given-when-then) feature stories. Developers glue those specifications to automated tests.\nCan we use this approach when testing the integration of services, too? The talk gives answers with a combination of the frameworks Cucumber and Citrus. After a short introduction to both frameworks we discuss the concepts and see some code examples that demonstrate how the behavior driven approach fits to testing the messaging integration with Http REST, JMS and mail communication.\nAt the end we will have an automated integration test with BDD and almost no glue code to write manually.\n\n\n\u00a0BDD\n\u00a0\n\n\n\u00a0Continuous Integration\n\u00a0\n\n\n\u00a0Testing support lib", "confName": "Devoxx, Belgium 2017", "title": "Behavior driven integration with Cucumber and Citrus"}, {"url": "https://cfp.devoxx.be/2017/talk/PLW-0836/From_Java_bytecode_to_instant_class_diagrams_with_Class_Visualizer", "abstract": "Dealing with existing big Java codebase is typically not a pleasure. First of all we need to understand it - starting from the structure of classes and relations between them. But how to quickly understand a software composed from thousands or tens of thousands of classes? The best way is to visualize them on automatically generated, complete and readable class diagrams. It that a reasonable wish?\nClass Visualizer is created to fulfil exactly that wish. It is a free, instant class diagram generator from the Java bytecode prepared to handle correctly even huge codebases. It exists for 6 years and is downloaded over 1,500 times per month.\nDuring this session we will discover how Class Visualizer can support us during our daily development work. We will visualize a sample project based on Spring 5 and, as a second example, the Java standard library (over 16,384 classes). Based on these examples we will examine usability, reliability and performance of the tool. Of course, there will be also time for questions.\n\n\n\u00a0visualization tools\n\u00a0\n\n\n\u00a0Java\n\u00a0\n\n\n\u00a0bytecode\n\u00a0\n\n\n\u00a0UML\n\u00a0\n\n\n\u00a0class diagram", "confName": "Devoxx, Belgium 2017", "title": "From Java bytecode to instant class diagrams with Class Visualizer"}, {"url": "https://cfp.devoxx.be/2017/talk/ADR-0517/Exploring_open_data_with_BigQuery", "abstract": "Big data is powerful. It helps you make informed decisions about your business, but putting it to use can be time consuming. There's nothing worse than taking the time to build out a dashboard only to realize that it isn't useful.\nIn this session Jen Tong, a Developer Advocate on Google Cloud Platform, will show you how cloud computing makes it easier to explore big data. She'll use Google BigQuery to poke around some really big data sets including the GDELT news database, Wikipedia logs, and weather data going back to 1929.\nYou'll leave knowing how to use the cloud to effectively explore all that valuable data you've been logging.\n\n\n\u00a0SQL\n\u00a0\n\n\n\u00a0BigQuery\n\u00a0\n\n\n\u00a0Open data", "confName": "Devoxx, Belgium 2017", "title": "Exploring open data with BigQuery"}, {"url": "https://cfp.devoxx.be/2017/talk/IHU-6624/Java9_and_REPL._Forget_debugging,_welcome_joy_and_productivity.", "abstract": "Oh Java, my old, lousy and boilerpalted friend. For ages, trying any thing new (which luckily wasn't that frequent afterall) was to start new project, followed by a Sandbox class and a public static void main method. Alternatively, a simple JUnit test was a nice entrypoint as well - if we were lucky enough to have some dependency management sorted out.\nHopefully things changed. With the Java9 a REPL has been added to the JDK. Everybody can just run an up-to-date Java shell and try out new syntax, new APIs, new libraries.\nIn this talk I'll walk through how you can use REPL to explore new API and language elements in isolation, try out new libraries, build complete apps with an immediate feedback.\n\n\n\u00a0Java9\n\u00a0\n\n\n\u00a0JShell\n\u00a0\n\n\n\u00a0REPL", "confName": "Devoxx, Belgium 2017", "title": "Java9 and REPL. Forget debugging, welcome joy and productivity."}, {"url": "https://cfp.devoxx.be/2017/talk/AFC-0753/Much_Robots._Very_Java._So_IoT.", "abstract": "Robo4J is an upcoming open source framework for quickly building robots using popular, often inexpensive, hardware and the Java SE platform. A good example is Coff-E, an autonomous, partly 3D printed, robot using a Raspberry Pi for brains and commonly available off-the-shelf components for actuators and sensors.\nThis talk will show how to painlessly build an autonomous robotic vehicle using the nascent Robo4J framework. After the talk, you should have a good sense of how to quickly configure and run a hardware system of your own.\nThe following will be discussed:\n* An overview of the Robo4J framework.\n* An overview of the Robo4J tools.\n* Useful source code examples.\n\n\n\u00a0Java\n\u00a0\n\n\n\u00a0IoT\n\u00a0\n\n\n\u00a0Robots\n\u00a0\n\n\n\u00a0Autonomous Robotic Vehicle", "confName": "Devoxx, Belgium 2017", "title": "Much Robots. Very Java. So IoT."}, {"url": "https://cfp.devoxx.be/2017/talk/CRJ-2930/Prometheus_Monitoring_for_Java_Web_Applications_w%2Fo_Modifying_Source_Code", "abstract": "The Prometheus monitoring tool follows a white-box monitoring approach: Applications actively provide metrics about their internal state to the Prometheus server. In order to instrument an application with Prometheus metrics, you have to add a metrics library and call that library in the application's source code. However, DevOps teams do not always have the option to modify the source code of the applications they are running.\nThis talk shows how to instrument Java Web Applications with Prometheus metrics without modifying the application's source code. The implementation uses a variety of lesser-known but useful JVM features and libraries: Java agents, Bytecode manipulation with Byte Buddy, custom class loaders, reflection without loading class dependencies, thread locals, weak references, Docker for running application servers in integration tests. Browsing through the demo code we will learn some interesting facts about module systems in application servers and class loaders in general.\n\n\n\u00a0javaagent\n\u00a0\n\n\n\u00a0devops\n\u00a0\n\n\n\u00a0prometheus", "confName": "Devoxx, Belgium 2017", "title": "Prometheus Monitoring for Java Web Applications w/o Modifying Source Code"}, {"url": "https://cfp.devoxx.be/2017/talk/FUD-4487/Design_Patterns_with_Kotlin", "abstract": "Kotlin looks great but do you feel like suddenly loosing all your coding skills and wisdom?\nLet's visit the Gang of Four Design Patterns and implement them on Kotlin using IntelliJ's native Kotlin support.\n\n\n\u00a0Kotlin\n\u00a0\n\n\n\u00a0Android Studio\n\u00a0\n\n\n\u00a0Android", "confName": "Devoxx, Belgium 2017", "title": "Design Patterns with Kotlin"}, {"url": "https://cfp.devoxx.be/2017/talk/ULZ-4025/AI_and_Minecraft", "abstract": "Project Malmo from Microsoft is a platform to use Minecraft as a AI testing ground. It's not about playing the game, it's about using Minecraft as an experimental platform for AI.\nIn my talk I'll show how to solve individual problems with reinforcement learning, Minecraft, and project Malmo.\n\n\n\u00a0Minecraft\n\u00a0\n\n\n\u00a0AI\n\u00a0\n\n\n\u00a0Machine learning\n\u00a0\n\n\n\u00a0game\n\u00a0\n\n\n\u00a0Java", "confName": "Devoxx, Belgium 2017", "title": "AI and Minecraft"}, {"url": "https://cfp.devoxx.be/2017/talk/RVY-8972/Not_all_equals_methods_are_created_equal", "abstract": "Did you know your equals method can contain bugs, even if you have it generated by your IDE?\nI will show you how to recognise these potential bugs, and why you should care about them. You will see how to craft an ironclad equals method. Also, you will see how to test your equals method and gain 100% coverage with a single line of test code, using EqualsVerifier. Because testing equals shouldn't have to take pages of code.\n\n\n\u00a0equality tests\n\u00a0\n\n\n\u00a0Unit Testing\n\u00a0\n\n\n\u00a0open source project\n\u00a0\n\n\n\u00a0Java", "confName": "Devoxx, Belgium 2017", "title": "Not all equals methods are created equal"}, {"url": "https://cfp.devoxx.be/2017/talk/GQJ-9928/Command_Line_Curiosities_-_Making_the_Terminal_Sing", "abstract": "Hamza, terminal enthusiast, has created some nifty open source apps that do quirky stuff: 3D labyrinths, Mandelbrot fractals, animations, but with a twist: they all run in text mode, in your terminal! In this talk, he\u2019ll give you a quick tour of his cabinet of code curiosities, showing experiments and explaining techniques.\nUnveil the true power hidden in everyone\u2019s most useful tool: the terminal-\n\n\n\u00a0command line\n\u00a0\n\n\n\u00a0experiments\n\u00a0\n\n\n\u00a0creativity\n\u00a0\n\n\n\u00a0Python\n\u00a0\n\n\n\u00a0scala", "confName": "Devoxx, Belgium 2017", "title": "Command Line Curiosities - Making the Terminal Sing"}, {"url": "https://cfp.devoxx.be/2017/talk/DGG-3509/Google_Cloud_Spanner:_Global_consistency_at_scale", "abstract": "Live coding and demos! In this presentation you'll learn how Spanner differs from traditional RDBMS, how those differences enable unique capabilities, and how those unique capabilities can enable advanced application behaviors. We'll show how to setup you first instance and database and walk you through design decisions when coming up with your first schema and queries that are enabled to scale to terabytes of data. Come prepared to see some code, queries and query explains.\n\n\n\u00a0relational database\n\u00a0\n\n\n\u00a0Cloud Native Applications\n\u00a0\n\n\n\u00a0Distributed Systems\n\u00a0\n\n\n\u00a0Cloud Spanner", "confName": "Devoxx, Belgium 2017", "title": "Google Cloud Spanner: Global consistency at scale"}, {"url": "https://cfp.devoxx.be/2017/talk/TWI-5560/Asciidoctor:_New,_Noteworthy,_and_Beyond", "abstract": "Asciidoctor continues to take technical documentation by storm, especially in the Java sector. From software projects like Spring, JUnit, Hiberate, and Elastic, to specifications like CDI and Bean Validation, to tech publishers like InfoQ, O\u2019Reilly, and independents, you don\u2019t have to look far to find AsciiDoc powering documentation. These abundant and diverse use cases have helped push Asciidoctor to new limits. So what\u2019s new and where\u2019s it headed?\nI\u2019ll start by covering the core mission of Asciidoctor and what changes we\u2019re trying to push for in documentation. Then, I\u2019ll survey recent improvements that have been introduced into the language and core processor. I\u2019ll then present some of the extensions, integrations, and tools that have been developed around core. I\u2019ll talk about how the processor fits with other components, such as static site generators, and what other software tools and processes are still needed. Finally, I\u2019ll discuss where we\u2019re headed with the AsciiDoc language and ecosystem.\nIf you\u2019re using the AsciiDoc writing format or are interested in learning more about it, this talk will give you lots of information to take back to your writing desk.\n\n\n\u00a0documentation\n\u00a0\n\n\n\u00a0Development Tools\n\u00a0\n\n\n\u00a0Writing", "confName": "Devoxx, Belgium 2017", "title": "Asciidoctor: New, Noteworthy, and Beyond"}, {"url": "https://cfp.devoxx.be/2017/talk/LWS-8338/Reliability_and_Resilience_in_the_Cloud_-_Experiments_with_Google_Genomics_and_Cloud_Foundry", "abstract": "Sub-title:\nProcessing Petabytes of Data using Pivotal Cloud Foundry, Google Genomics and Google Cloud Platform\nProcessing trillions of records is not any east feat. Doing so at a cloud scale is nearly impossible. Google has solved this problem with Google Genomics, a unique technology to query exabytes of data. Learn how microservices and service brokers deployed on Pivotal Cloud Foundry interact with data-at-scale using Google Genomics, all powered by Google Cloud Platform.\n\n\n\u00a0Cloud Ecosystems\n\u00a0\n\n\n\u00a0Google Cloud\n\u00a0\n\n\n\u00a0Cloud Foundry\n\u00a0\n\n\n\u00a0Cloud Native Java\n\u00a0\n\n\n\u00a0Big Data", "confName": "Devoxx, Belgium 2017", "title": "Reliability and Resilience in the Cloud - Experiments with Google Genomics and Cloud Foundry"}, {"url": "https://cfp.devoxx.be/2017/talk/WHM-4433/Developing_Java_applications_using_Visual_Studio_Code", "abstract": "Looking for a lightweight editor for developing and debugging your Java application?Visual Studio Code is an open source, extensible coding editor. There have been 577K installation for the VS Code Java plug-in by Red Hat since last year. In this session, we'd like to show you some new capabilities just being added to the plugin, including debugging and other cool features.\n\n\n\u00a0Development Tools\n\u00a0\n\n\n\u00a0Java\n\u00a0\n\n\n\u00a0debugging", "confName": "Devoxx, Belgium 2017", "title": "Developing Java applications using Visual Studio Code"}, {"url": "https://cfp.devoxx.be/2017/talk/YDH-3862/Introducing_the_Mobile_PerfSDK", "abstract": "Over the past year Uber has created tooling to gather mobile performance data from the field. This includes timing various in-app transitions, gathering metrics like frame rate, CPU, and memory usage, as well as automatically tracing the execution time of function calls in production.\nWe are now open-sourcing this set of tools as the PerfSDK. Come check out its capabilities and how you can use it in your own iOS and Android applications.\n\n\n\u00a0mobile apps\n\u00a0\n\n\n\u00a0Performance tuning\n\u00a0\n\n\n\u00a0open source", "confName": "Devoxx, Belgium 2017", "title": "Introducing the Mobile PerfSDK"}, {"url": "https://cfp.devoxx.be/2017/talk/WCZ-0812/DevOps:_State_of_the_Union", "abstract": "In this DevOps BOF we want to discuss the past, the present and the future of software development and delivery across functions, commonly known as DevOps. This is the platform to meet DevOps experts and the community in order to exchange experience and learn from others. Discussed topics are up to the group, but will surely again be a charming mixture of both concepts and tools.\n\n\n\u00a0DevOps\n\u00a0\n\n\n\u00a0Continuous Delivery\n\u00a0\n\n\n\u00a0Continuous Integration\n\u00a0\n\n\n\u00a0Agile", "confName": "Devoxx, Belgium 2017", "title": "DevOps: State of the Union"}, {"url": "https://cfp.devoxx.be/2017/talk/IUD-9636/The_evolution_of_Push_at_Uber", "abstract": "Real-time communication is fast becoming the most important aspect of an engaging, modern mobile application. At Uber, real-time is at the center of our user experience, from car moving on the map to live updating ETA. Join us for a trip through history of how technologies and architecture has been evolved at Uber in order to bring real-time data to the devices.\n\n\n\u00a0Mobile\n\u00a0\n\n\n\u00a0architecture\n\u00a0\n\n\n\u00a0backend", "confName": "Devoxx, Belgium 2017", "title": "The evolution of Push at Uber"}, {"url": "https://cfp.devoxx.be/2017/talk/STN-3848/WildFly_AppServer_&_WildFly_Swarm_Community_BOF", "abstract": "The reports of Java EE death are greatly exaggerated - come to the WildFly AppServer/Swarm community BOF to discuss over beer the present and future of Java EE on and off the cloud.\n\n\n\u00a0Enterprise Java\n\u00a0\n\n\n\u00a0WildFly Swarm\n\u00a0\n\n\n\u00a0Cloud Native Java\n\u00a0\n\n\n\u00a0Open Source code\n\u00a0\n\n\n\u00a0Red Hat OpenShift", "confName": "Devoxx, Belgium 2017", "title": "WildFly AppServer & WildFly Swarm Community BOF"}, {"url": "https://cfp.devoxx.be/2017/talk/PUX-9562/Code_quality_metrics_in_a_microservices_environment", "abstract": "There are useful tools out there or analyzing our code. And as a developer I have been using them regularly to be able to improve my code. But are these tools still valid in a microservices environment?\nIs duplication of code between microservices a bad thing? Or should we avoid sharing code between microservices? What metrics can we best use for analyzing microservices?\n\n\n\u00a0code quality\n\u00a0\n\n\n\u00a0microservices architectures\n\u00a0\n\n\n\u00a0metrics", "confName": "Devoxx, Belgium 2017", "title": "Code quality metrics in a microservices environment"}]
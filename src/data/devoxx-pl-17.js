export default [{"url": "http://cfp.devoxx.pl/2017/talk/OSN-6244/Opening", "abstract": "Conference opening", "confName": "Devoxx, Poland 2017", "title": "Opening"}, {"url": "http://cfp.devoxx.pl/2017/talk/HVJ-6261/Speed_without_Discipline:_a_Recipe_for_Disaster", "abstract": "The demands on applications have never been more intense. The users on the web, combined with mobile devices, ask for highly responsive applications. Our customers, thanks to open competition and perceived agility, expect tomorrow's features be delivered today. \u201cAre you done yet\u201d are the dreaded words of the corporate grind.\nSeveral tools have risen to address those demands for speed. While that's wonderful, speed in the absence of discipline is hard to sustain. In this keynote we will discuss the practices that can help alleviate the pains while helping us cope with the demands, the reasons to do so, and the approach we can take to achieve that.", "confName": "Devoxx, Poland 2017", "title": "Speed without Discipline: a Recipe for Disaster"}, {"url": "http://cfp.devoxx.pl/2017/talk/AWO-7633/Concurrency_Concepts_in_Java", "abstract": "Unlike earlier languages, Java had a well-defined threading and memory model from the beginning.  And over the years, Java gained new packages to help solve concurrency problems.\nDespite the memory model and standard library, Java concurrency is still subtle and often surprising.\nIn this talk, you'll learn many of these subtleties and also see some of the changes and additions to come in Java 9 & 10.\n\n\n\u00a0Java\n\u00a0\n\n\n\u00a0Java 9\n\u00a0\n\n\n\u00a0concurrency\n\u00a0\n\n\n\u00a0memory model", "confName": "Devoxx, Poland 2017", "title": "Concurrency Concepts in Java"}, {"url": "http://cfp.devoxx.pl/2017/talk/XNW-3022/Build_To_Last:_From_Frontend_To_Backend_%23slideless_%23talk", "abstract": "Java and JavaScript are the most popular languages. Popularity attracts developers and developers like tools, frameworks and libraries. Libraries come and go, frameworks are introducing breaking changes on each release, and the enterprise (=longer lasting) projects have to survive in such environment.\nIs there a simple strategy for survival? There is, but it is hardly explainable with slides and easy to demonstrate with code.\n\n\n\u00a0Java EE Platform\n\u00a0\n\n\n\u00a0Javascript\n\u00a0\n\n\n\u00a0html 5", "confName": "Devoxx, Poland 2017", "title": "Build To Last: From Frontend To Backend #slideless #talk"}, {"url": "http://cfp.devoxx.pl/2017/talk/RJW-7610/Consumer_Driven_Contracts_and_Your_Microservice_Architecture", "abstract": "Consumer driven contracts (CDC) are like TDD applied to the API. It\u2019s especially important in the world of microservices. Since it\u2019s driven by consumers, it\u2019s much more user friendly. Of course microservices are really cool, but most people do not take into consideration plenty of potential obstacles that should be tackled. Then instead of frequent, fully automated deploys via a delivery pipeline, you might end up in an asylum due to frequent mental breakdowns caused by production disasters.\nWe'll write a system using the CDC approach together with Spring Boot, Spring Cloud Contract. We\u2019ll show you how easy it is to write applications that have a consumer driven API and that will allow a developer to speed up the time of writing his better quality software.", "confName": "Devoxx, Poland 2017", "title": "Consumer Driven Contracts and Your Microservice Architecture"}, {"url": "http://cfp.devoxx.pl/2017/talk/LWM-1699/Introduction_to_gRPC:_A_general_RPC_framework_that_puts_mobile_and_HTTP%2F2_first", "abstract": "gRPC is a high performance, language-neutral, general RPC framework developed and open sourced by Google. Built on the HTTP/2 standard, gRPC brings many benefits such as bidirectional streaming, flow control, header compression, multiplexing and more. In this session, you will learn about gRPC and how you can use it in your Java applications through a series of code samples and demos.\n\n\n\u00a0RPC\n\u00a0\n\n\n\u00a0MicroServices\n\u00a0\n\n\n\u00a0RPC framework", "confName": "Devoxx, Poland 2017", "title": "Introduction to gRPC: A general RPC framework that puts mobile and HTTP/2 first"}, {"url": "http://cfp.devoxx.pl/2017/talk/GMC-2952/Advanced_search_for_your_legacy_application", "abstract": "How do you mix SQL and NoSQL worlds without starting a messy revolution?\nThis live coding talk will show you how to add Elasticsearch to your legacy application without changing all your current development habits. Your application will have suddenly have advanced search features, all without the need to write complex SQL code!\nDavid will start from a RestX, Hibernate and Postgresql/MySQL based application and will add a complete integration of Elasticsearch, all live from the stage during his presentation.\n\n\n\u00a0search\n\u00a0\n\n\n\u00a0backend\n\u00a0\n\n\n\u00a0Elasticsearch", "confName": "Devoxx, Poland 2017", "title": "Advanced search for your legacy application"}, {"url": "http://cfp.devoxx.pl/2017/talk/GOU-8576/Up_&_running_with_TypeScript", "abstract": "Ever heard about TypeScript but never had a chance to get your hands dirty with it?\nThis workshop starts with a short crash-course of most important & useful TS features and aims to migrate an existing app from JS to TS within just one day. Learn the migration strategies (remake, step by step), plan them (split work among the team), learn the tools and implement them all! You'll start with a webpack setup and existing app. Tasks include designing data structures, securing async operations, domain design (what your app is dealing with), project structure & automation tools, and more.\nAnd then, the next day, start using TypeScript in your job :)\nRequirements\n- At least basic knowledge of JavaScript language\n- Fill in this survey: https://docs.google.com/forms/d/e/1FAIpQLSd1jMbY7-JOh0wQInATb28sCzNBlAw9ismH8KwobB0hrLkF3w/viewform.\n- Following software installed on your laptop:\n- git versioning (https://git-scm.com/downloads)\n- node.js - server-side JavaScript platform (https://nodejs.org/en/download/)\nIn order to make sure everything is working fine, execute following: npm install -g typescript\n\n\n\u00a0Javascript\n\u00a0\n\n\n\u00a0TypeScript\n\u00a0\n\n\n\u00a0Data Types\n\u00a0\n\n\n\u00a0architecture", "confName": "Devoxx, Poland 2017", "title": "Up & running with TypeScript"}, {"url": "http://cfp.devoxx.pl/2017/talk/NHW-0186/Reactive_programming_in_Java", "abstract": "Reactive Programming in gaining a lot of excitement. Many libraries, tools, and frameworks are beginning to make use of reactive libraries. Besides, applications dealing with big data or high frequency data can benefit from this programming paradigm. Come to this presentation to learn about what reactive programming is, what kind of problems it solves, how it solves them. We will take an example oriented approach to learning the programming model and the abstraction.", "confName": "Devoxx, Poland 2017", "title": "Reactive programming in Java"}, {"url": "http://cfp.devoxx.pl/2017/talk/NTX-4013/Rethinking_Microservices_with_Stateful_Streams", "abstract": "Microservices are one of those polarising concepts that technologists either love or hate. Splitting applications into autonomous units clearly has advantages, but larger service-based systems tend to struggle as the interactions between the services grow.\nAt the core of this sits a dichotomy: Data systems are designed to make data as accessible as possible. Services, on the other hand, actively encapsulate. These two forces inevitably compete in the architectures we build. By understanding this dichotomy we can better reason about how services should be sewn together. We strike a balance between the ability to adapt quickly and the loose coupling we need to retain autonomy, long term.\nIn this talk we'll examine how Stateful Stream Processing can be used to build Event Driven Services, using a distributed log like Apache Kafka. In doing so this Data-Dichotomy is balanced with an architecture that exhibits demonstrably better scaling properties, be it increased complexity, team size, data volume or velocity.\n\n\n\u00a0Event-Driven Microservices\n\u00a0\n\n\n\u00a0Stream Processing\n\u00a0\n\n\n\u00a0Distributed Systems", "confName": "Devoxx, Poland 2017", "title": "Rethinking Microservices with Stateful Streams"}, {"url": "http://cfp.devoxx.pl/2017/talk/XNH-3620/Brainstorming_your_way_from_a_Monolith_to_a_Clean_Architecture", "abstract": "Did you ever wanted to (re)write your enterprise application from scratch? I\u2019m sure you did ! And I\u2019m pretty sure the rewritten codebase would be two times smaller than it is right now. But, given the time and budget for a rewrite, what would you do to keep it from becoming \u201clegacy\u201d again in 2 years? Ok, Let's face it! Your boss won\u2019t approve a rewrite! But still, what should you aim for with your continuous refactorings and clean-ups?\nLet me share with you what I believe to be the ideal mindset about an enterprise application: Pragmatic, Clean Evolutionary Architecture. Pragmatic = Keep It Short & Simple; Clean = The Onion Architecture (Dependency Inversion Principle); Evolutionary = Continuously redesign.\nThe discussion will conceptually start from a simplistic one-class system and grow the architecture with additional patterns, justifying any added complexity with fundamental principles of good design + lots of explanations. This way, adding constructs as we go, we\u2019ll end up very close to a minimalist architecture that we actually use today in our projects today.\nEven though the talk is mostly about architecture, you\u2019ll see lots of code examples that support my decisions.\n\n\n\u00a0application architecture\n\u00a0\n\n\n\u00a0design principles\n\u00a0\n\n\n\u00a0Enterprise Java\n\u00a0\n\n\n\u00a0Agile", "confName": "Devoxx, Poland 2017", "title": "Brainstorming your way from a Monolith to a Clean Architecture"}, {"url": "http://cfp.devoxx.pl/2017/talk/GOX-6520/Distributed_Systems_in_One_Lesson", "abstract": "Normally simple tasks like running a program or storing and retrieving data become much more complicated when we start to do them on collections of computers, rather than single machines. Distributed systems has become a key architectural concern, and affects everything a program would normally do\u2014giving us enormous power, but at the cost of increased complexity as well.\nUsing a series of examples all set in a coffee shop, we\u2019ll explore topics like distributed storage, computation, timing, messaging, and consensus. You'll leave with a good grasp of each of these problems, and a solid understanding of the ecosystem of open-source tools in the space.", "confName": "Devoxx, Poland 2017", "title": "Distributed Systems in One Lesson"}, {"url": "http://cfp.devoxx.pl/2017/talk/QIT-4096/From_Laptop_to_the_World_-_Global_deployment_at_your_fingertip_with_Kubernetes", "abstract": "Kubernetes is a powerful, open source, container orchestration / cluster management tool created by Google. It drew upon all the lessons learned from a near-decade of using containers at Google. Kubernetes handles deployment and provisioning of your application architecture, and it also handles number of failure scenarios gracefully, from a crashed process, to a failure of a cluster node. In this talk, we will develop a Java application locally, run and test it locally and deploying it into a cluster of machines with Kubernetes and container orchestration. But we'll take this even a step further, and see how we can configure and utilize Kubernetes Cluster Federation to deploy this application into multiple datacenter regions around the globe, configuring global load balancing, and regional level service discovery that can handle a variety of failure scenarios.", "confName": "Devoxx, Poland 2017", "title": "From Laptop to the World - Global deployment at your fingertip with Kubernetes"}, {"url": "http://cfp.devoxx.pl/2017/talk/QWA-9910/Java_8_anti-patterns", "abstract": "Java 8 became the major Java version in development and production environment. Lambda-expressions, Streams API, default and static methods, Java time library bring a lot of attention from the Java development community. However broad usage of Java 8 lead to \"Java 7\" style in Java 8 applications.\nWe will talk about most common anti-patterns and how to resolve it\n\n\n\u00a0Java\n\u00a0\n\n\n\u00a0Java 8\n\u00a0\n\n\n\u00a0The Java 8 Streams\n\u00a0\n\n\n\u00a0anti-patterns", "confName": "Devoxx, Poland 2017", "title": "Java 8 anti-patterns"}, {"url": "http://cfp.devoxx.pl/2017/talk/PVW-1351/Ship_every_change_to_production!_How_it%E2%80%99s_done_in_Mockito,_and_how_you_can_do_it_with_http:%2F%2Fshipkit.org", "abstract": "Mockito library produces new version with every merged pull request. Learn about the great benefits of continuous delivery on a real world example. Learn how to setup your project so that you can focus on code and features, and never on the release overhead.\nIn this talk I will show you how to setup automated versioning, release notes generation and publishing artifacts in 15 minutes by applying a single Gradle plugin.\nYou can ship your code as a pro - try out http://shipkit.org.\n\n\n\u00a0Continuous Delivery\n\u00a0\n\n\n\u00a0Automation\n\u00a0\n\n\n\u00a0Publishing", "confName": "Devoxx, Poland 2017", "title": "Ship every change to production! How it\u2019s done in Mockito, and how you can do it with http://shipkit.org"}, {"url": "http://cfp.devoxx.pl/2017/talk/UUM-2978/A_Tale_about_The_Evil_Partial_Mock,_and_the_Separation_by_Levels_of_Abstraction_Principle_of_TDD", "abstract": "Do you know what a Partial Mock is ? If you're practicing TDD, you must have faced/heard of it. And you probably have heard that it's Evil, and you should avoid it. People use it to avoid overlapping tests in a Large class, e.g. to mock a private method.\nBut if it's Evil, what to use instead? You don't want to overlap your tests, so you really don't want your new test to run through all those little methods you've already covered with unit tests.\nIt's called Separation on the Level of Abstraction, and it's one of the most powerful (yet not-so-known) techniques that allow your Tests to drive your Design. TDD, remember? :)\nJoin me for a quick discussion on a simple example (LIVE CODING), spiced with notes on SRP, DRY and other Clean Code principles.\nYou'll love it!", "confName": "Devoxx, Poland 2017", "title": "A Tale about The Evil Partial Mock, and the Separation by Levels of Abstraction Principle of TDD"}, {"url": "http://cfp.devoxx.pl/2017/talk/MXL-2924/Four_Distributed_Systems_Architectural_Patterns", "abstract": "Developers and architects are increasingly called upon to solve big problems, and we are able to draw on a world-class set of open source tools with which to solve them. Problems of scale are no longer consigned to the web\u2019s largest companies, but are increasingly a part of ordinary enterprise development. At the risk of only a little hyperbole, we are all distributed systems engineers now.\nIn this talk, we\u2019ll look at four distributed systems architectural patterns based on real-world systems that you can apply to solve the problems you will face in the next few years. We\u2019ll look at the strengths and weaknesses of each architecture and develop a set of criteria for knowing when to apply each one. You will leave knowing how to work with the leading data storage, messaging, and computation tools of the day to solve the daunting problems of scale in your near future.", "confName": "Devoxx, Poland 2017", "title": "Four Distributed Systems Architectural Patterns"}, {"url": "http://cfp.devoxx.pl/2017/talk/PYE-4474/Think_Async_in_Java_8", "abstract": "We will observe the evolution on asynchronous approaches in Java. We will come to the concept of Reactive programming. We will observe the necessary historical infrastructure evolved starting from the early Java. We then will learn how to use the new but forgotten Java 8 out of the box API CompletableFuture for reactive approach in java programming and unlock a better multithreading performance in intuitive way.\n\n\n\u00a0Java 8\n\u00a0\n\n\n\u00a0async\n\u00a0\n\n\n\u00a0CompletableFuture", "confName": "Devoxx, Poland 2017", "title": "Think Async in Java 8"}, {"url": "http://cfp.devoxx.pl/2017/talk/CEA-3379/Reactive_Meets_Data_Access", "abstract": "Building reactive applications does not simply end by throwing arbitrary reactive libs on the classpath and picking an appropriate frontend technology. It's a cross-cutting concern throughout the entire stack. We'll have a look on Spring Data utilizing Project Reactor and Spring 5 get hold of a reactive data access layer on top of NoSQL stores.\n\n\n\u00a0Spring 5\n\u00a0\n\n\n\u00a0Reactive Programming\n\u00a0\n\n\n\u00a0NoSQL", "confName": "Devoxx, Poland 2017", "title": "Reactive Meets Data Access"}, {"url": "http://cfp.devoxx.pl/2017/talk/ZWC-6501/Load_Testing_Like_a_Pro", "abstract": "Load testing is an important part of systems engineering. A good load test tells us whether our system is equipped to handle expected load, what kind of service level our customers can expect and how our system behaves when it's saturated. Despite their usefulness, many teams don't run load tests, and those that do often make grave mistakes that all but eradicate the usefulness of their tests.\nIn this talk, we'll see how to design, construct, execute, verify and analyse a load test to answer the three important questions:\n\nHow much load can my system handle before it is saturated\nWhat service can I expect my customers to see at a given load level\nWhat are the bottlenecks in my application that cause saturation\n\nMany open source load testing tools result in inherently incorrect results due to incorrect handling of latency measurements: the so-called Problem of Co-ordinated Omission. In this talk, we'll see how  to overcome this problem to obtain reliable results using the standard JMeter load-testing tool.", "confName": "Devoxx, Poland 2017", "title": "Load Testing Like a Pro"}, {"url": "http://cfp.devoxx.pl/2017/talk/PYQ-3913/Welcome_Alexa,_your_personal_assistant", "abstract": "What if you\u2019re eating and having a discussion about a certain topic? Searching on your phone would mean your food gets cold. Or what if you\u2019re lying on the couch without your phone and you want to control the lights? Smartphones are so 2015, they were ok, but they had their best time.\nWelcome Alexa, your new personal assistant. Alexa is a voice service, it will respond to your questions and execute tasks. You can for instance ask Alexa for the weather, or ask her to play a certain radio station.\nIn this presentation I will show you how to create your own Alexa device. The setup uses a Raspberry Pi, microphone, speaker and a Java application. I will compare the custom setup with the Echo device Amazon is selling. Next to that I will show you how to integrate Alexa in your home automation setup for instance with openHAB. That way you can control your lights and everything else with your voice. Last but not least I will show you how to create your own skills in Java to add functionality to Alexa. A demo with a custom Skill deployed with Maven and running serverless in AWS Lambda is included as well.\n\n\n\u00a0Raspberry Pi\n\u00a0\n\n\n\u00a0Java\n\u00a0\n\n\n\u00a0Voice Recognition", "confName": "Devoxx, Poland 2017", "title": "Welcome Alexa, your personal assistant"}, {"url": "http://cfp.devoxx.pl/2017/talk/EKO-3359/Machine_Learning_Exposed_workshop", "abstract": "In the age of quantum computing, computer chip implants and artificial intelligence, it\u2019s easy to feel left behind. For example, the term \"machine learning\" is increasingly bandied about in corporate settings and cocktail parties, but what is it, really?\nIn this session, Katharine Beaumont will explore machine learning topics such as supervised learning, unsupervised learning, reinforcement learning, and deep learning. We'll also survey various machine learning APIs and platforms. We\u2019ll give you an overview of what you can achieve, as well as an intuition on the maths behind machine learning.\nTo get the most out of this workshop, you will need a laptop with wifi, Java 8 JDK, Ant build tool or Netbeans IDE.", "confName": "Devoxx, Poland 2017", "title": "Machine Learning Exposed workshop"}, {"url": "http://cfp.devoxx.pl/2017/talk/GZK-5251/Cracking_the_Code_to_Secure_Software", "abstract": "What is it that makes writing secure software so difficult? Why do we keep making the same mistakes over and over again? One challenge is that developers are busy delivering features and meeting deadlines \u2013 giving security requirements less priority.\nIn this talk you\u2019ll learn to use principles and mindsets from Domain Driven Design combined with a pinch of security awareness, to create secure code \u2013 while still focusing on your business features.\nYou\u2019ll learn the basic principles of Secure by Design and how to use concepts such as Domain Primitives and Entity Snapshots to harden your code. What a Domain DoS attack is, and how to incorporate security testing in your delivery pipeline. The ideas and tools presented are directly applicable in your daily work.\n\n\n\u00a0security\n\u00a0\n\n\n\u00a0Design\n\u00a0\n\n\n\u00a0design patterns\n\u00a0\n\n\n\u00a0theory\n\u00a0\n\n\n\u00a0architecture", "confName": "Devoxx, Poland 2017", "title": "Cracking the Code to Secure Software"}, {"url": "http://cfp.devoxx.pl/2017/talk/SBM-3063/Feature_Branches_And_Toggles_In_A_Post-GitHub_World", "abstract": "During the evolution of the ideas behind Continuous Delivery, many of us came to the conclusion that having branches for features was not a good idea, and resulted in some fairly problematic issues. This was contentious at the time, with lots of discussion around whether or not feature toggles or feature branching was the right way forward.\nRoll on several years, and through Git and GitHub, branches are everywhere. Is this a problem?\nThis talk re-examines the role of feature branches and feature toggles, and looks at them in the context of new research and technology to try and distill down some sensible lessons in a post-GitHub, but hopefully not post-factual, world.", "confName": "Devoxx, Poland 2017", "title": "Feature Branches And Toggles In A Post-GitHub World"}, {"url": "http://cfp.devoxx.pl/2017/talk/PVP-9915/Implementing_Clean_Architecture", "abstract": "For those familiar with the teachings of Uncle Bob, Clean Architecture is no stranger. It's a set of architectural guidelines that provide a SOLID set of principes on which to base you architecture in order to have a clean, easy to understand and even easier to maintain foundation. This talk will show you how you can implement such an design and will demonstrate the power of such a design. It will also show how you can be pragmatic in implementing Clean Architecture and what the possible implications can be when making pragmatic concessions.", "confName": "Devoxx, Poland 2017", "title": "Implementing Clean Architecture"}, {"url": "http://cfp.devoxx.pl/2017/talk/JYW-6287/How_to_run_a_dev_team_in_a_cloud-talent_world_(100%25_remotework)", "abstract": "How to work 100% in the cloud? Do remote standups sound strange?\nWell that is the future of work! Scrum in remote environments will increase with the amount of people working remotely.\nDo you want to find out how a global startup is using the latest technologies and the best people to do just that?\nThis is the presentation for you.\n\n\n\u00a0Management\n\u00a0\n\n\n\u00a0engineering teams\n\u00a0\n\n\n\u00a0development teams\n\u00a0\n\n\n\u00a0DevOps\n\u00a0\n\n\n\u00a0Cloud.", "confName": "Devoxx, Poland 2017", "title": "How to run a dev team in a cloud-talent world (100% remotework)"}, {"url": "http://cfp.devoxx.pl/2017/talk/ERI-9936/Making_the_Most_of_Your_Gradle_Build_", "abstract": "Gradle can do awesome things by itself, but you get more bang when you combine your build with plugins. This presentation shows how you can keep dependencies up to date; obtain a license report for all dependencies, useful for licensing compliance; keep license headers up to date; generate aggregate coverage reports; create binary compatibility reports; write documentation that can access production code; and publish documentation to Github. Come discover how to make the most of your Gradle build with less effort.", "confName": "Devoxx, Poland 2017", "title": "Making the Most of Your Gradle Build "}, {"url": "http://cfp.devoxx.pl/2017/talk/ZQE-2539/The_Art_of_Clean_Code", "abstract": "Whatever paradigm, language, technology stack or devops strategy we use, we will always write code. And that code will need to be understood, maintained and evolved by various developers for many years, hopefully. It will be read 10x more time than it took to write it!\nThen, tell me, how do you write your code ?\nStop rushing, and start writing professional code. You'll need to learn to introspect your design, to make it express your thoughts in code. It may take years of practice to reach that point, but the path starts with some basic guidelines and 'code smells' that you ought to know, along with a core toolset of refactoring techniques.\nAs simple as some of these might seem, they will become the starting point of a lot of discussions about core principles of good software design, such as DRY, SRP, DIP, and KISS. Come and enjoy an entertaining, tangible presentation of key concepts in Clean Code, that will allow you to easily coach others, back at work.\nLooking forward to share my passion with you: writing expressive code that is a pleasure to work with.\nPS: In the end, let's talk a bit about writing clean code using Java8 lambdas/Streams, shall we? :)", "confName": "Devoxx, Poland 2017", "title": "The Art of Clean Code"}, {"url": "http://cfp.devoxx.pl/2017/talk/SHS-9332/Git_Anti-Patterns:_How_Mess_Up_With_Git_And_Love_It_Again", "abstract": "Git is one of the most powerful tool in developers' toolbox. If you use it correctly, it dramatically increases productivity of developers and eliminates the waste products continuously. Developers cultivate a development culture on top Git most of the time.\nIt's powerful but its power is untamed. Many teams fall into several traps of misusing commands and therefore feel uncomfortable while using Git. We mess up Git history, the codebase and the whole preferred branching strategy in seconds. We use branches, merge/rebase strategies, creating commits in wrong ways. Even we never take committing paradigms into account while using Git.\nAs a software craftsman, I've been using Git for years and I've already educated Git to hundreds of developers in all levels. I'm so lucy; I had a chance to experience huge amount of anti-patterns in time. In this talk, I will talk about what those anti-patterns are and what should we do in order not to fall into them.", "confName": "Devoxx, Poland 2017", "title": "Git Anti-Patterns: How Mess Up With Git And Love It Again"}, {"url": "http://cfp.devoxx.pl/2017/talk/PLC-8937/JPA_beyond_copy-paste", "abstract": "JPA is the main building block in most Java projects. However, a lot of developers still use it without a deep understanding of the technology, relying mainly on applying the copy-paste methodology from StackOverflow or existing system entities. During this presentation, I will consolidate knowledge about object-relational mapping. We'll see how lazy loading works under the hood and understand the difference between a set, list or bag. We will also talk about common traps leading to significant decreases in performance or improper behavior of the system.\n\n\n\u00a0jpa\n\u00a0\n\n\n\u00a0hibernate\n\u00a0\n\n\n\u00a0Java", "confName": "Devoxx, Poland 2017", "title": "JPA beyond copy-paste"}, {"url": "http://cfp.devoxx.pl/2017/talk/YXW-6331/Big_Data_101,_all_the_foundations_you_need_to_bootstrap_a_new_project_in_2017", "abstract": "BigData is quite trendy and now you're in a new project with Spark/Cassandra/Hadoop/ to build the DataLake/ of the 21st century. To have a good start with the new world and all its concepts you'll need some foundational knowledge:\n1) basic notions in distributed systems: time, failures, latency, replication\n2) the CAP theorem, a brief look on consistency and availability\n3) master/slave, multi-master and masterless architecture, advantages and drawbacks", "confName": "Devoxx, Poland 2017", "title": "Big Data 101, all the foundations you need to bootstrap a new project in 2017"}, {"url": "http://cfp.devoxx.pl/2017/talk/YOH-5790/Shift-Left:_The_role_of_the_tester_in_a_DevOps_world", "abstract": "In this talk, you will learn about the changing role of testing and test automation in the increasingly fast-paced world of continuous delivery and automated acceptance testing. Learn how, in a DevOps environment, testing activities start with requirements discovery and definition, playing a vital role in not only detecting defects, but preventing them, and ensuring not only that the features are built right, but the right features are built. And learn how test automation needs to happen during, not after, the sprint, and how you can achieve this.\nDespite rumors to the contrary, the role of the tester is not diminished with the arrival of automated DevOps, with its ultra-rapid deployment cycles and its emphasis on automation. On the contrary, testers play a vital role in ensuring that the code that gets deployed ten times a day is worth deploying.\n\n\n\u00a0Next Generation Testing\n\u00a0\n\n\n\u00a0DevOps\n\u00a0\n\n\n\u00a0BDD", "confName": "Devoxx, Poland 2017", "title": "Shift-Left: The role of the tester in a DevOps world"}, {"url": "http://cfp.devoxx.pl/2017/talk/VGW-3240/Reactive_Spring", "abstract": "Spring 5 is here! One of the most exciting introductions in this release is support for reactive programming, building on the Pivotal Reactor project to support message-driven, elastic, resilient and responsive services. Spring 5 integrates an MVC-like component model adapted to support reactive processing and a new type of web endpoint, functional reactive endpoints. In this talk, we'll look at the net-new Netty-based web runtime, how existing Servlet code can run on the new world, and how to integrate it with existing Spring-stack technologies.\n\n\n\u00a0Spring 5\n\u00a0\n\n\n\u00a0Spring Boot\n\u00a0\n\n\n\u00a0Reactor\n\u00a0\n\n\n\u00a0Reactive Streams\n\u00a0\n\n\n\u00a0Reactive Programming", "confName": "Devoxx, Poland 2017", "title": "Reactive Spring"}, {"url": "http://cfp.devoxx.pl/2017/talk/ZLV-2545/From_Tic_Tac_Toe_to_AlphaGo:_Playing_games_with_AI_and_machine_learning", "abstract": "Google's AlphaGo is an extraordinary breakthrough for Artificial Intelligence. The game of 19x19 Go has 1.74\u00d710^172 unique positions and is about a 'googol' times harder to calculate than chess. Experts thought it would take at least another decade before AI would be able to beat the best human players. So how did Google tackle this problem? What algorithms did they use and how do they work?", "confName": "Devoxx, Poland 2017", "title": "From Tic Tac Toe to AlphaGo: Playing games with AI and machine learning"}, {"url": "http://cfp.devoxx.pl/2017/talk/VSR-9078/Kotlin_%E2%80%93_your_2017_Java_replacement", "abstract": "Do you dream about life without unexpected nulls? Do you fancy a little bit of functional programming?  Are you tired of Java ceremony?\nThen maybe 2017 is The Right Moment to choose Kotlin! This JVM language brings you stuff like null-safety and immutability by default. Less boilerplate, more safety. And you can introduce it in your project class after class, module after module, without risky revolution.\nI will show you pros and cons of Kotlin, based on last 8 months of my experience. In November 2016 I started a new backend project built on top of Gradle and Spring. Today I still do not regret the decision to write it in Kotlin. Let's see if I convince you! :-)\n\n\n\u00a0Kotlin\n\u00a0\n\n\n\u00a0null safety\n\u00a0\n\n\n\u00a0functional programming\n\u00a0\n\n\n\u00a0Spring\n\u00a0\n\n\n\u00a0backend", "confName": "Devoxx, Poland 2017", "title": "Kotlin \u2013 your 2017 Java replacement"}, {"url": "http://cfp.devoxx.pl/2017/talk/PXQ-4341/Cut_me_some_Slack:_The_road_to_continuous_learning_and_improvement", "abstract": "What is organizational slack?\n> Slack is the degree of freedom in a company that allows it to change.\nAre you in a situation where you are\n\npracticing Scrum or the like?\ndeveloping 24/7 struggling to keep your head above water to meet demands?\novercommitting in your iterations?\ncommitting to your exact velocity but still not managing to deliver it all?\nexperiencing inconsistent amount of work finished between iterations?\nfeeling your agility is fragile?\nfrustrated that there is no time to learn new things?\n\nWould you like to know of a simple yet very effective way to solve all these impediments and better yet, improve and learn continuously and be more productive while being happy?\nCome and join me at this session, and hopefully you can leave it with the necessary knowledge to explain to others why they should cut you some slack.", "confName": "Devoxx, Poland 2017", "title": "Cut me some Slack: The road to continuous learning and improvement"}, {"url": "http://cfp.devoxx.pl/2017/talk/ZRU-0762/Beyond_Given%2FWhen%2FThen_-_why_diving_into_Cucumber_is_the_wrong_approach_to_adopting_BDD", "abstract": "IT teams today are under constant pressure to deliver more value sooner, and Behaviour Driven Development (BDD) is one of the more effective ways to help teams deliver the high quality software that their business needs. When they adopt BDD, many teams look to tools like Cucumber to help them. But BDD isn\u2019t simply about picking up a new tool.\nIn fact, there is a lot more to BDD than Given/When/Then and tools like Cucumber, and both can be misused. In this talk, we will take a step back and look at the bigger picture, and learn why using Gherkin at the wrong time, or for the wrong purpose, may be holding you back.\n\n\n\u00a0BDD\n\u00a0\n\n\n\u00a0Agile\n\u00a0\n\n\n\u00a0requirements", "confName": "Devoxx, Poland 2017", "title": "Beyond Given/When/Then - why diving into Cucumber is the wrong approach to adopting BDD"}, {"url": "http://cfp.devoxx.pl/2017/talk/AVC-4613/Speaking_Managerish._How_to_promote_your_idea_without_being_fired_", "abstract": "Talking with managers is not easy. Sometimes you are just ignored, sometimes misunderstood and in worst case fired\u2026\nI\u2019m working as an Agile coach, and I\u2019m having these conversations quite often. My interlocutors differs and so do their businesses. Despite that, over time, I\u2019ve noted some common patters that helps me drive discussions.\nDuring this presentation I\u2019d like to share with you my 7 Steps for Successful Agile Conversation. Or not even Agile. Any conversation, where you'd like to be heard and positively influence your audience.\nI\u2019ll show you how to avoid falling into pitfalls and what are the tools that works for me. You\u2019ll leave this session better prepared for the next meeting with your boss.\n\n\n\u00a0Agile\n\u00a0\n\n\n\u00a0organizations\n\u00a0\n\n\n\u00a0change", "confName": "Devoxx, Poland 2017", "title": "Speaking Managerish. How to promote your idea without being fired "}, {"url": "http://cfp.devoxx.pl/2017/talk/OAQ-7381/Streams_in_JDK_8:_The_Good,_The_Bad_and_The_Ugly", "abstract": "The streams API combined with lambda expressions, both introduced in JDK 8, provide a way for developers to use a functional style of programming for the first time in Java.  As with all powerful features like this, it is easy to abuse them and produce code that is difficult to read and hard to maintain.\nIn this BoF we\u2019ll use examples of streams to discuss whether the code is good, bad or ugly and talk about ways the code could be changed.  No doubt, this will lead to some interesting discussions!\nIf you have examples of stream code you think would be good to discuss please feel free to bring them along.\n\n\n\u00a0jdk8", "confName": "Devoxx, Poland 2017", "title": "Streams in JDK 8: The Good, The Bad and The Ugly"}, {"url": "http://cfp.devoxx.pl/2017/talk/SNZ-5503/The_Spring_BOF", "abstract": "An opportunity for discussing Spring Framework 5, Spring Boot 2, Spring Cloud, Project Reactor and everything around... as well as JDK 9 and Java EE 8 from a Spring perspective.\n\n\n\u00a0Spring BOF\n\u00a0\n\n\n\u00a0Spring 5\n\u00a0\n\n\n\u00a0Spring Boot\n\u00a0\n\n\n\u00a0Spring Cloud\n\u00a0\n\n\n\u00a0Reactor", "confName": "Devoxx, Poland 2017", "title": "The Spring BOF"}, {"url": "http://cfp.devoxx.pl/2017/talk/JNH-2335/Kotlin_BOF", "abstract": "Kotlin is a new JVM language which is quickly gaining ground due to its pragmatic approach to language features, care for compatibility with the existing Java ecosystem and good tooling support (backed by JetBrains). This informal session is a chance to meet other developers who are already using Kotlin or just considering to try it out.\nThere is no set agenda: we will discuss topics as they come up. I have been running Kotlin apps in production for several months now as a part of a large microservice-based system where most code is written in Java. We started from a single Kotlin service and now there are more and more Kotlin services at the company. So far, integration has been very smooth. I'd be happy to share my own experiences and to learn how it has worked out for others.", "confName": "Devoxx, Poland 2017", "title": "Kotlin BOF"}, {"url": "http://cfp.devoxx.pl/2017/talk/YTS-5716/Secret_of_developing_High_Performance_WebSite,_with_no_budget_in_small_amount_of_time", "abstract": "You need to create high performance web site, in small amount of time, with almost no budget and almost no team? This is talk for you ;)\nHave you wondered how to develop web site, which is able to server million of request in small amount of time, to be able to do it with small team, with almost no budget at all and with ridiculous deadline.\nJoin me in this talk were I will revile many secrets that I learn over the years by developing some of the most visited websites. After this talk you will know immediately things that you did good and things that you did bad. Also you will be able to put skills at work right away and make your dreams come true.\n\n\n\u00a0Prototyping Mindset: Rapidly Build High\n\u00a0\n\n\n\u00a0tips\n\u00a0\n\n\n\u00a0secrets", "confName": "Devoxx, Poland 2017", "title": "Secret of developing High Performance WebSite, with no budget in small amount of time"}]
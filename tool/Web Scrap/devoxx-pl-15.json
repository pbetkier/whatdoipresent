[{"url": "http://cfp.2015.devoxx.pl/2015/talk/MPK-2038/Opening.html", "abstract": "Conference opening, practical informations and announcements.", "confName": "Devoxx, Poland 2015", "title": "Opening"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/PFB-0328/The_Silver_Bullet_Syndrome.html", "abstract": "We love our silver bullets don\u2019t we? Constantly chasing the dream that the next big thing will solve all our past problems. It doesn\u2019t matter if it\u2019s a language, framework, platform or library, we\u2019re out there chasing it. Why? Well because it\u2019s going to solve our needs, it\u2019s going to solve the business needs. Well supposedly it will. And how much is it going to cost? Not that much, especially if we\u2019re not the ones paying the bills.\nIt\u2019s about time we look at the hard facts and ask those difficult questions. Are we really looking for a silver bullet?  Why are we constantly riding the technology bandwagon? Where is the churn going to take us? And at what cost?", "confName": "Devoxx, Poland 2015", "title": "The Silver Bullet Syndrome"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/QRA-8722/Principles_Of_Microservices.html", "abstract": "Microservces are small services with independent lifecycles that work together. There is an underlying tension in that definition - how independent can you be when you have to be part of a whole? I've spent much of the last couple of years trying to understand how to find the right balance, and in this talk/tutorial I'll be presenting the core seven principles that I think represent what makes microservices tick.\nAfter a brief introduction of what microservices are and why they are important, we'll spend the bulk of the time looking at the principles themselves:\n* Modelled Around Business Domain\n* Culture Of Automation\n* Hide Implementation Details\n* Decentralize All The Things!\n* Deploy Independently\n* Isolate Failure\n* Highly Observable\nIn terms of learning outcomes, I'd say that beginners will get a sense of what microservices are and what makes different, whereas more experienced practitioners will get an insight into practical advice into how to implement them.", "confName": "Devoxx, Poland 2015", "title": "Principles Of Microservices"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/RYH-0853/What's_Coming_in_Java_EE_8.html", "abstract": "Java EE 7 is here and the horizons for Java EE 8 are emerging. In order to solidly kick start Java EE 8, the GlassFish team conducted a series of community surveys. This session shares the content, results and analysis of these surveys. We will also share the detailed progress of Java EE 8 technologies already underway. The goal is to foster interest, discussion and participation around Java EE 8.\nSome of the items covered include HTTP 2, Server-Sent Events (SSE), JSON binding, JCache, CDI/EJB alignment, cloud, PaaS, multitenancy/SaaS, JMS 2.1, JAX-RS 2.1, CDI 2, security simplification, REST management/monitoring, an action-oriented Web framework and much, much more.\nYou are encouraged to bring your questions, comments and ideas. The time to get involved in shaping the future of Java EE is now!", "confName": "Devoxx, Poland 2015", "title": "What's Coming in Java EE 8"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/MNN-6482/Clean_Architecture_-_how_to_improve_your_system_architecture.html", "abstract": "Did you ever consider where to put business logic and how to organize it in a clean, re-usable way? How much logic should be in REST controllers, how much in DB related objects? What about validation? What about frameworks, how to make them loosely coupled and easily replaceable if needed? And is it at all OK to do that kind of up-front thinking/designing if you are doing TDD and agile?\nIn this talk you'll learn the core principles of the Clean Architecture, how Uncle Bob defines it and why he thinks it is an old but forgotten concept. We won't stop here. No theory or nice diagrams without live examples, we'll get our hands dirty by looking at code, examples and testability. What's more, some real Clean Architecture project experience will be shared and we'll see what the real benefits and cost were.", "confName": "Devoxx, Poland 2015", "title": "Clean Architecture - how to improve your system architecture"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/HLV-4157/5-10-15_years_with_Java_-_from_junior_to_master_and_back_again.html", "abstract": "There is no doubt about it - we live in the times very comfortable for IT engineers. Most of all software developers. Especially Java developers. Job market is hot. Software developers have countless options - thousands of companies from Poland and abroad fight for employees in Poland. And they offer very reasonable money - especially when compared to other professions.\nIt\u2019s very natural and tempting to let employers adore yourself and rest on laurels. One can already see a lot o victims of this situation. Very friendly job market is de facto our biggest enemy.\nHow do 5, 10 or 15 or more years of the experience in our industry change the perception of Java platform and most of all the perception of ourselves - our position and value as professional Java developers? What are the real caveats of our profession and our beloved platform? What is really important for us - devs? Does the knowledge of Java turns us into professional immortals?\nWojtek tries to answer such questions or trigger the audience to rethink their approach to it. In a quite opinionated manner he will debunk some myths of Java developer ethos - basing on many observations and meetings with people from our industry.", "confName": "Devoxx, Poland 2015", "title": "5-10-15 years with Java - from junior to master and back again"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/XSO-0131/From_API_to_protocol.html", "abstract": "Most applications are based on known protocols, like HTTP, and this encourages an API approach, with requests and responses, client and server, in text mode. But protocols are always evolving, come back to binary (HTTP 2, Protobuf), asynchronous messages (actors) and streams (BLE), and developers are once again inventing protocols and the higher layers.\nYou will get in this talk a large overview of the questions to ask yourself while designing a protocol, the common errors, and the available tools.", "confName": "Devoxx, Poland 2015", "title": "From API to protocol"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/PLQ-0747/Tips_and_tricks_for_clean_relational_db_schemas.html", "abstract": "It can be usual for software developers to let the ORM take care of the\ndatabase schema. In many cases it's a bad idea as it makes the data stored in\nyour database brittle and hard to use confidently. I'll show a few tricks\nwhich will help you cleanly store and query data by using your database engine\nto its full power.", "confName": "Devoxx, Poland 2015", "title": "Tips and tricks for clean relational db schemas"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/PHE-0627/High_Performance_JavaScript_Web_Apps.html", "abstract": "In this session, we'll dig deep into the performance aspects of JavaScript and the Web Browser. Single page web applications are becoming popular very quickly, and understanding the low-level and high-level aspects of the browser platform and JavaScript runtimes embedding in them are important. We'll cover topics such as browser pipe-lining, memory management, testing and measuring performance.", "confName": "Devoxx, Poland 2015", "title": "High Performance JavaScript Web Apps"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/LBA-2783/\"Bootiful\"_Applications_with_Spring_Boot.html", "abstract": "Alright, so maybe \"bootiful\" won't ever work, but I tried, and it was worth it too because you're reading this. Spring Boot, the new convention-over-configuration centric framework from the Spring team at Pivotal, marries Spring's flexibility with conventional, common sense defaults to make application development not just fly, but pleasant! Join Spring developer advocate Josh Long @starbuxman for a look at what Spring Boot is, why it's turning heads, why you should consider it for your next application (REST, web, batch, big-data, integration, whatever!) and how to get started.\nWe'll do a \"Boot\"-camp and introduce Boot, and then introduce some of the new features since last year including support for JAX-RS, JTA and the embedded Undertow engine from Wildfly.", "confName": "Devoxx, Poland 2015", "title": "\"Bootiful\" Applications with Spring Boot"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/SCE-7532/Functional_patterns_for_scala_beginners.html", "abstract": "Scala, by being both Functional and Object-Oriented is easy to get started with, especially for java developpers. However, to get the most of the language, you have to embrace its functional nature.\nIn this session, I'll show you how to start using scala's functional nature by presenting patterns originated in the functional world:\n\nAlgebraic Data Types for data modelling\nTypeclasses for extensible abstractions\nError handling in a composable fashion with Either and Validation\nSegregation between logic and effects for easier testing\nProperty based testing", "confName": "Devoxx, Poland 2015", "title": "Functional patterns for scala beginners"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/XAU-6285/JRebel_under_the_covers_-_how_is_it_even_possible%3F.html", "abstract": "This talk presents a number of conceptual and technical challenges that we discovered while building JRebel. At first, the JVM wasn't designed for live updates, so we will talk about the engine that mitigates the problem. Secondly, the diversity of Java ecosystem, created by the variety of application servers, the frameworks and tools, makes it challenging in creating a generic solution that would fit the majority of developers. We will see, how Java platform itself allows us to develop a solution by applying bytecode instrumentation mechanism.\nJRebel does live code reloading to ensure that the developer can keep instantly alternating between the developing environment and the web browser, to save wasted time and increase the productivity flow.", "confName": "Devoxx, Poland 2015", "title": "JRebel under the covers - how is it even possible?"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/CWK-6861/Preventing_Analytics_and_Ads_from_polluting_your_codebase.html", "abstract": "The need for monetization is an unavoidable fact in today's mobile industry. Key to achieving that is the need for user behaviour analytics and, in many cases, in-app native advertising. More often than not though, these needs end up producing spaghetti code that is mixed in with business logic code that hinders maintenance and feature development.\nIn this talk, I'll be presenting techniques for dealing with such, peripheral to your code, requirements. We'll investigate ways to isolate code related to Analytics and Ads, from your business logic and also touch, briefly, on strategies for testing such concerns separately from the main feature requirements.", "confName": "Devoxx, Poland 2015", "title": "Preventing Analytics and Ads from polluting your codebase"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/NYO-1841/OnConnectionLost:_The_life_of_an_offline_web_application.html", "abstract": "Can you use HTML5 technologies to build a web application which works offline? Without a reliable internet connection? Let\u2019s say for two weeks?\nThat is what our client asked us to build. Their people will use the application on the road; reading documents, entering results and uploading pictures. And then they come home, connect to the internet and sync their results with their colleagues\u2019.\nAppCache, IndexedDB and File API allow us to store the application and its data in the browser. However, they require us to re-think assumptions we used to make in the web:\n\nIs the client or the server the master of the data?\nHow can we handle updates of the application?\nWhat data do we need to download beforehand?\nHow do you test offline automatically?\nAnd what does offline mean anyway?\n\nI want to show you what we discussed and how we answered these questions.", "confName": "Devoxx, Poland 2015", "title": "OnConnectionLost: The life of an offline web application"}, {"title": "You don\u2019t run unit tests concurrently. Do you?"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/APF-2420/Does_it_have_to_be_so_complicated%3F.html", "abstract": "Can we Keep our products Simple and Standardized? Is it really possible? What can be simplified?  There are many areas in which we can apply this principle as conventions, architecture, development environment, used technologies etc. During session we will go case by case and discuss props and cons based on my experience from different projects and companies which tries to apply it.", "confName": "Devoxx, Poland 2015", "title": "Does it have to be so complicated?"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/AUD-7376/UniCloud_-_polska_chmura_dla_programistow.html", "abstract": "Chmura UniCloud \u0142\u0105czy wygod\u0119 PaaS z elastyczno\u015bci\u0105 IaaS. Platforma bazuj\u0105ca na technologii Jelastic zosta\u0142a zaprojektowana tak, aby by\u0142a trywialnie prosta w obs\u0142udze, skraca\u0142a czas tworzenia oprogramowania i zwi\u0119ksza\u0142a wydajno\u015b\u0107 ka\u017cdej aplikacji napisanej w Java, PHP, Python, Ruby czy Node.js. Dope\u0142nieniem rozwi\u0105zania jest infrastruktura sprz\u0119towa zaprojektowana od podstaw w oparciu o technologi\u0119 SSD przez architekt\u00f3w i in\u017cynier\u00f3w Centrum Danych Unizeto.\nKa\u017cdy z uczestnik\u00f3w Devoxx PL otrzyma\u0142 w swoich materia\u0142ach konferencyjnych voucher UniCloud o warto\u015bci 250 z\u0142 umo\u017cliwiaj\u0105cy przetestowanie us\u0142ugi!", "confName": "Devoxx, Poland 2015", "title": "UniCloud - polska chmura dla programist\u00f3w"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/HJO-1890/Modern_Web_Architecture.html", "abstract": "Functional programming, objects. HTTP, ESBs. Actors, agents, APIs. Mobile, mobile web, web, native web, native. Building a modern application (that is, one architected, designed, and built somewhere in the next two to five years) is not easy. You could, certainly, do as we've done for years, and just \"pick a tech stack, follow the 'best principles', go!\". And you could, certainly, rewrite the same code over again in another five years, this time with different 'best practices' and/or different languages and/or different APIs. But it would still be the same code, and it would still suffer the same problems.\nOr, you could build something different.", "confName": "Devoxx, Poland 2015", "title": "Modern Web Architecture"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/IDY-7366/\"Bootiful\"_Microservices_with_Spring_Cloud.html", "abstract": "Spring Boot makes building applications and services as easy as can be, but what happens when you start introducing many services, as is common in a microservice-centric world. Many big-web sites like Twitter, Google, Amazon and Netflix have all had to answer these questions, often at great expense. Some, like Netflix, have open-sourced some of their work.\nNetflix, by the way, is a huge user of Spring Boot, and we've learned a lot about their use-cases building cloud-native and microservice centric systems.\nSpring Cloud is a set of Spring Boot extensions that wrap and adapt important parts of Netflix OSS's components that support key concepts for building microservices: service registration and discovery (with Eureka), reliability patterns (with Hystrix), client-side routing patterns (with Ribbon), etc. Spring Cloud also fills in gaps for things like distributed and journaled configuration.\nIn this talk, we'll look at how it all stitches together to make building cloud-native and microservice centric systems a breeze!", "confName": "Devoxx, Poland 2015", "title": "\"Bootiful\" Microservices with Spring Cloud"}, {"title": "Co by\u0142o pierwsze: kod czy architektura?"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/DZW-1572/Corporate_startup_and_Scala.html", "abstract": "JIRA ServiceDesk is the first Atlassian product which was written in Scala, developed in a startup mode. A year after the 1.0 release, it is well known for being one of the best solutions for IT teams. How is it like, to run cloud a Scala application in OSGi container with memory constraints? How does the application play with the rest of your stack and your Ecosystem? Can you quickly hire Scala experts in Sydney and what happens with the project when too many Java experts learn Scala at once? The talk will be about the technical and organisational challenges we go through everyday, when we work on ServiceDesk.", "confName": "Devoxx, Poland 2015", "title": "Corporate startup and Scala"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/HCT-4518/From_spaghetti_with_no_src%252Ftest_to_green_CI,_good_coverage_and_well-sleeping_developers.html", "abstract": "Yes, we did it! Over a year ago we met a monster - a legacy Spring MVC application with 50% code duplication, no tests, manual deployment and mysterious error reporting. Come and see yourself how blood, sweat and tears have then turned into a well-tested REST API, pleasant to use and develop.\nAfter a year we have an interactive API documentation, informative call statuses and error messages. We precisely track every request through its entire lifecycle. Together with version tracking on multiple nodes, this lets us spot any errors really quickly.\nPlus, we reduced the boilerplate needed to achieve all of this to a single annotation for each API call - with the help of AspectJ, MDC, custom filters, converters and more. Obviously, we also introduced src/test/groovy, full of Spock and rest-assured - which made our application \u201cthe most rigid part of the infrastructure\u201d, as per our customer.\nCome to hear our story, share yours and let us know if we could do better!", "confName": "Devoxx, Poland 2015", "title": "From spaghetti with no src/test to green CI, good coverage and well-sleeping developers"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/NVN-0370/Agile_Development_Meets_Connected_Devices_-_Lessons_Learned.html", "abstract": "We are used to agile software development. The tools and methods to thrive towards continuous delivery are mature. We can spin up environments in minutes, test our software automatically and deploy to production with a single click.\nConnected devices bring a new layer of complexity to a project.\nHardware prototypes evolve in much longer cycles than the software. Automated testing becomes a challenge when user flows spread across multiple devices and involve human interaction. Environments for continuous integration suddenly move back from the cloud to real devices on our desks.\nThis talk is about the lessons learned from a real life project that builds a system around a connected consumer device. The goal is to highlight some of the challenges and our approaches to tackle them. There are patterns evolving that are a good guidance for other projects.", "confName": "Devoxx, Poland 2015", "title": "Agile Development Meets Connected Devices - Lessons Learned"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/KLS-7859/Refactoring_to_Functional.html", "abstract": "How many times have been told how functional programming is so much better than imperative, and then being presented with a functional approach to calculating a fibonacci sequence, leaving you wondering how that can be even remotely useful when working in real world applications? Yep, we\u2019ve all been there. It seems that every time someone wants to explain functional programming to us, it\u2019s around how to solve some mathematical problem. But how does that provide us value? How do we deal with things like loose coupling or dependency injection?\nJoin this journey where we\u2019ll look at code we usually write when developing business applications and how to refactor this using functional paradigms, and more importantly, see if these provide us with any value.", "confName": "Devoxx, Poland 2015", "title": "Refactoring to Functional"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/YDU-6078/Security_Platform_as_a_Service_with_Docker_and_Weave.html", "abstract": "Cloud services are rarely \"read-only.\" We build cloud services to that users can interact with the data in the cloud. And the more complex the user interaction, the more likely that we will create a Turing complete query/configuration system. And sometimes we just allow users to upload traditional code like JavaScript, etc. But any Turing complete grammar means that there are all manner of security issues from running code in infinite loops to nastier issues including accessing other users' data.\nContainers provide an excellent abstraction for securing the execution of untrusted code. Containers provide simple levers to isolate data, constrain CPU, memory, and network access, and simple is generally better when securing a system. Please join David Pollak as he explores using Docker to isolate user code processes and the use of HAProxy and Nginx to make the isolated user code appear to unified with a whole web application.", "confName": "Devoxx, Poland 2015", "title": "Security Platform as a Service with Docker and Weave"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/MZA-9564/Modularity_in_post_microservice_world.html", "abstract": "Each developer that had to deal with any reasonably sized system was wondering what is the ultimate approach to building highly modular, well performing, scalable and easy to change systems. They should also be easy to write, maintain, earn a lot of money and go for a beer when we are tired.\nLatest approach, silver bullet of nowadays modularity is to build in small applications, so called microservices. In this talk we're not going to judge is it right or wrong approach, instead let's see what benefits we get from them and what are the other options available today in Java world. There will be a comparison to older ways of keeping application modular, like OSGi and quick rant about building monolith applications with internal modularization.", "confName": "Devoxx, Poland 2015", "title": "Modularity in post microservice world"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/FLE-2738/Apache_Cassandra_101.html", "abstract": "Apache Cassandra is a the database of choice for people who need scalability and high availability without compromising performance. Cassandra's replication achieves fault tolerance and zero down time on commodity hardware.\nHowever developers need to get out of a relational mindset to achieve all of this, so in this talk we\u2019ll cover:\n\nOverview of Cassandra including how it replicates to achieve zero downtime\n\nCore use cases that Cassandra fits, hopefully leaving attendees with a sense of whether Cassandra fits their use case\n\nInteracting with Cassandra from Java with examples that use the raw driver and mapping APIs\n\nIntroduction to more complicated topics such as light weight transactions, branches and load balancing\n\n\nMy goal is to have attendees gain an understanding of when Cassandra is the right fit and how it achieves scalability and tolerance to hardware failure all while showing how the modern drivers make it easy to use from Java.", "confName": "Devoxx, Poland 2015", "title": "Apache Cassandra 101"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/JWQ-8445/Using_JavaScript%252FHTML5_Rich_Clients_with_Java_EE_7.html", "abstract": "The sea change in HTML5 is poised to shift the pendulum away from today's thin-client based server-side web frameworks like Struts 2 and JSF to JavaScript powered rich clients. With strong support for REST, WebSocket and JSON, Java EE is well positioned to adapt to this landscape.\nIn this heavily code driven session, we will show you how you can utilize today's most popular JavaScript rich client technologies like AngularJS, Backbone, Knockout and Ember to utilize the core strengths of Java EE using JAX-RS, JSR 356/WebSocket, JSON-P, CDI and Bean Validation.", "confName": "Devoxx, Poland 2015", "title": "Using JavaScript/HTML5 Rich Clients with Java EE 7"}, {"title": "Technical leadership \u2013 from an expert to a leader"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/FXV-8031/A_Gentle_and_useful_introduction_to_Reactive_Extensions.html", "abstract": "Reactive Extensions have been around for quite a while. First originated in the Microsoft space, they are now available pretty much on any language and platform, including Java and JavaScript. In this session we\u2019re going to understand what reactive extensions are all about and how we can leverage them to create asynchronous and scalable applications. We\u2019ll see the benefits they provide over other more traditional asynchronous models and see how to put them to use with practical examples. This session is about finally understanding Rx and removing all the myth surrounding it.", "confName": "Devoxx, Poland 2015", "title": "A Gentle and useful introduction to Reactive Extensions"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/ZEP-4833/You're_an_Architect...Now_What%3F.html", "abstract": "Many software developers point their career towards ascending to the gilded rank of Architect\u2026but what does it mean to actually be one? While many of us labor under false pretense of abject technical decision making, the reality is often very different. You'll code less, spending more time on activities that lack an objective green/red bar. But you'll also an opportunity to impact far more than one project.\nIn this talk, I'll speak to my own journey. We'll touch on influencing coworkers, the importance of communication and the importance of cup of coffee.", "confName": "Devoxx, Poland 2015", "title": "You're an Architect...Now What?"}, {"title": "Ansible to rule them all \u2013 o provisioningu i deploymencie aplikacji Java"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/KGM-9010/Is_your_profiler_speaking_the_same_language_as_you%3F.html", "abstract": "Profilers are absolute beasts. And profilers might prove useful to pinpoint the performance issues in your Java applications.\nBy using profilers, developers are fortunate to find the root cause of an issue at hand. However, it requires effort to actually comprehend the data collected by the profiler. Due to the inherent complexity of the data, one has to understand how this data is collected. And thus understand how the profiler actually works.\nDuring this talk we will go through the classic profiler features. What is a hotspot? What is the difference between sampling and instrumentation from the profiler point of view? What are the problems with either of those methods? What is the time budget of the application? And more!\nI will also showcase a new kid on the block among the profiling tools: XRebel. This tool provides insight into application behavior and permits the developers to discover application level issues", "confName": "Devoxx, Poland 2015", "title": "Is your profiler speaking the same language as you?"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/QYO-0948/Caching_reboot:_javax.cache_&_Ehcache_3.html", "abstract": "After more than 10 years, Java finally has a standard caching API as delivered by JSR-107. In parallel, Ehcache - the well known and over 10 years old caching library - is getting a reboot. Version 3 is announced: JSR-107 compliant, fully generified API, the good pieces of the 2.x line and a few innovations.\nThis could be a lot to digest at once, so the presentation will be run like a menu:\n\nAs a starter, you will be introduced to the JSR-107 API and features.\nThe main course will be to go over real-world caching use cases. This will allow us to understand what javax.cache offers but also lacks in places. It will be served with some additional features of Ehcache 3. This will show you how to get to them while your application keeps addressing the specification APIs.\nFor desert, we will look at specific feature(s) that make Ehcache 3 unique compared to other cache offerings, including former versions.", "confName": "Devoxx, Poland 2015", "title": "Caching reboot: javax.cache & Ehcache 3"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/XQH-5796/Lessons_learned_from_scaling_software.html", "abstract": "Scaling software is hard. One can argue that scaling software development teams is as hard as creating scalable solutions. Judging by my experience in many cases it's not less crucial though as it contributes to achievement of success as well.\nA couple of thoughts from my experience with scaling teams I would like to discuss. As team grows: from somewhat small to big I prefer to move focus during interviews and team development from checking skill set towards culture alignment with current team.\nDevelopment environment and toolset is becoming an obstacle more exponentially than linear.\nEnd-to-end responsibility (Spotify-tribe-alike) helps in both work division and efficiency.\nIt's more crucial to mix \"old\" tribe with \"newbies\".\nMaintaining team integration is much harder so motivation stack (brown bags, knowledge sharing sessions, ship it days, 20% free time) helps a lot (introduced by Atlassian).\nThe bigger team is the more work from leader is required to maintain the same team efficiency, spirit and culture.\nUnderstanding organisational behaviour is more crucial along the way.\nSelf-aware leader comes more in hand.", "confName": "Devoxx, Poland 2015", "title": "Lessons learned from scaling software"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/RKF-9134/What's_New_in_WildFly_9.html", "abstract": "This session covers new improvements that will be introduced in WildFly 9:\n\nWildfly-core will be extracted from the codebase and the ability to assemble a server on top of it will be introduced. WildFly 9 will be provided in two versions: Wildfly Web and Wildfly Full but users will be able to create their custom packaging of WildFly.\nUsers will be able to shutdown the application server in a graceful manner - after the shutdown command is executed server will reject new requests and allow existing requests to finish before it shuts down.\nSupport to HTTP/2, a new version of HTTP protocol based on SPDY, will be introduced.\nUsers will be able to use WildFly as a load balancer.  Consequently, it will be possible to manage the balancer with the same tools that are used to manage the rest of the domain. What is more, users will be able to use more efficient protocols, such as HTTP/2, for communication between the balancer and backend servers.\nAn OpenShift cartdridge, which will enable users to use WildFly 9 in cloud environment, will be provided.\nWildFly 9 will use OpenJDK ORB library instead of JacORB.", "confName": "Devoxx, Poland 2015", "title": "What's New in WildFly 9"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/UMF-4595/Nashorn,_what_is_the_whole_buzz_about.html", "abstract": "Project Nashorn - a small addition to the Java 8, that allows to run efficiently run JavaScript on JVM. Many has scratched their head why the heck it's being announced as a big thing for Java.\nDuring the course of this talk, I'll try to convince everyone in the room that Nashorn is not only academic toy to play after (work) hours with something. It's a powerful tool with many usages, we'll see couple of 'em.\nWhole thing is going to be from Java developer perspective, however non Java speaking folks, should also be able to benefit, especially if you know only Node and want to go beyond.\nOn the same note, it's not another Nashorn vs Node talk! It's all about Nashorn, and each example we'll check out is focused only on it and unique platform features.", "confName": "Devoxx, Poland 2015", "title": "Nashorn, what is the whole buzz about"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/UDO-8681/Supler:_complex_web_forms,_not_so_complex.html", "abstract": "Let\u2019s face it. Creating websites with complex forms is a pain, and usually ends in lots of code duplication and frustration.\nThat\u2019s why we have decided to create Supler. Supler has a very focused set of functionality:\n\na Scala DSL for defining forms, generating JSON form description, applying values to backing objects and running actions & validations on the backend\na Javascript HTML form renderer, client-side validations, form templating and automatic reloading\n\nAs important as Supler features, are its non-features: no defined web or Javascript framework, no defined ORM layer, no defined backing object lifecycle etc. We aim to shape Supler as a library, not a framework, so that you can use it with a variety of software stacks.\nCome and see some live-coding showing various Supler features, and explaining the Supler approach!", "confName": "Devoxx, Poland 2015", "title": "Supler: complex web forms, not so complex"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/TOL-8245/Babun_-_a_Windows_shell_you_will_love,_finally!.html", "abstract": "The truth is really brutal. Whether we like it or not, most of us develop software using the Windows OS. Corporate policies, etc. we all know that story. How can we survive it? How to be as productive as on a Linux/Mac machine without spending hours on tweaking the Windows Registry or hacking some Visual Basic scripts?\nIn this session we will have a quick look at the babun project http://babun.github.io - a Windows console you will love from the very first second. It features oh-my-zsh, package-manager, programming tools and much more.\nBabun has been downloaded by 50K developers in the first months and rocks the Windows world ever since. Interested? Come by and befriend your Windows (however bad it sounds)...", "confName": "Devoxx, Poland 2015", "title": "Babun - a Windows shell you will love, finally!"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/WXO-7121/IDE_Wizard%3F_CLI_Command%3F_Get_both_for_the_price_of_one!.html", "abstract": "Have you ever struggled with adding a wizard to an IDE? Have you ever created a development tool and thought, \"It's a shame I\u2019ll have to re-write the same code for my new IDE wizard.\u201d? Have you ever found yourself switching between an IDE and the command-line because the best tool for the job is never in both places? If your answer to any of these questions was \"YES!\", then this is for YOU!\nIn this session we will show how JBoss Forge allows you to use plain Java and CDI to create a new tool that, without any additional effort, shows up as a wizard in your your favorite IDE and that, at the same time, can be used as a CLI command.\nAfter attending, attendees will be able to increase their productivity substantially by creating new JBoss Forge commands for tedious jobs and using them in the environment of their choice.", "confName": "Devoxx, Poland 2015", "title": "IDE Wizard? CLI Command? Get both for the price of one!"}, {"url": "http://cfp.2015.devoxx.pl/2015/talk/NBN-8697/Vaadin_Designer,_the_visual_design_tool_for_modern_web_apps.html", "abstract": "Whether UI should be built programmatically, declaratively or with a visual tool is always a good flamewar starter. In this session we discuss benefits of each approach. We'll try to describe the design Vaadin team took when redesigning visual design tool from scratch and what were the reasons behind. Also. we'll take a look on what are the shortcuts and workflow improvements that such a tool can provide.", "confName": "Devoxx, Poland 2015", "title": "Vaadin Designer, the visual design tool for modern web apps"}]
[{"url": "https://cfp.devoxx.us/2017/talk/MND-5787/Welcome_Keynote", "abstract": "Devoxx US welcome keynote, including practical information about the event etc.", "confName": "Devoxx, US 2017", "title": "Welcome Keynote"}, {"url": "https://cfp.devoxx.us/2017/talk/OTY-5246/The_Business_of_Technology_Business_Technology", "abstract": "Technology is really important. So is business. So the business of the technology business technology is even more so. This talk will convince you that you need to hire me to help you navigate these wet, wet waters.", "confName": "Devoxx, US 2017", "title": "The Business of Technology Business Technology"}, {"url": "https://cfp.devoxx.us/2017/talk/NAN-8167/What_is_%22Identity%22%3F", "abstract": "Imagine your brain's logic is written in code. You fire up the debugger, set a breakpoint in the \"Identity\" class, and inspect your brain's internal state.  What are the state variables?  What does the code look like?  How do we fix the bugs?\nIn this talk, we'll explore brand new territory -- how to use software as a metaphor to understand the human brain.   You'll learn a new language of metaphorical shapes to describe the \"Architecture of Identity\", then we'll examine some of the key dysfunctions in our organizations through this lens.\nAs engineers, we pour our hearts into our work, and our creation becomes an extension of ourselves. As a team, we turn into a family, raising a child, and we dream about how our baby will grow up to be beautiful and awesome. We sacrifice ourselves for the well-being of our child, because it's pre-wired into our DNA. Unfortunately, when our beautiful creation gets stomped on by the dysfunctional machine of business, we're heartbroken from the whole identity-crushing experience.\nWho we are, what we believe in, and why we care so deeply about our craft, is at the foundation of what it means to be an engineer.", "confName": "Devoxx, US 2017", "title": "What is \"Identity\"?"}, {"url": "https://cfp.devoxx.us/2017/talk/BML-2361/Java_EE_8_Work_in_Progress", "abstract": "This session will present an update on work in progress on Java EE 8. We'll discuss changes in the focus of the Java EE 8 Platform to reflect recent and emerging trends in the areas of cloud and microservices. We'll present an overview on recent accomplishments in the existing JSRs that are part of the Java EE Platform, as well as an overview of new JSRs that are targeted for inclusion in Java EE 8. We'll also briefly discuss work that is being pipelined for Java EE 9.", "confName": "Devoxx, US 2017", "title": "Java EE 8 Work in Progress"}, {"url": "https://cfp.devoxx.us/2017/talk/XTR-0367/Introduction_to_Apache_Kafka_-_The_Next_Gen_Event_Streaming_System", "abstract": "Apache Kafka has emerged as a next generation event streaming system to connect our distributed systems through fault tolerant and scalable event-driven architectures.  Now open source through Apache, Kafka is being used by numerous large enterprises for a variety of use cases.  This session will introduce the basics of Kafka and walk through some code examples that will show how to begin using it.", "confName": "Devoxx, US 2017", "title": "Introduction to Apache Kafka - The Next Gen Event Streaming System"}, {"url": "https://cfp.devoxx.us/2017/talk/XHU-8592/The_Verification_of_a_Distributed_System_", "abstract": "Distributed Systems are difficult to build and test for two main reasons: partial failure & asynchrony. These two realities of distributed systems must be addressed to create a correct system, and often times the resulting systems have a high degree of complexity. Because of this complexity, testing and verifying these systems is critically important. In this talk we will discuss strategies for proving a system is correct, like formal methods.  We will also discuss less strenuous methods of testing which will help increase our confidence that our systems are doing the right thing.", "confName": "Devoxx, US 2017", "title": "The Verification of a Distributed System "}, {"url": "https://cfp.devoxx.us/2017/talk/KZC-5930/The_State_of_Managing_State_with_RxJava", "abstract": "RxJava's use in building Android apps has grown rapidly! Combining and composing synchronous and asynchronous sources of data has become easy. That burden that remains is where to put the overall state of the application and how to handle its changes. This talk will be an exploration in how we can increase the confidence and determinism of our app state.\nBecause Rx isn't specific to Android, we'll look at state management approaches employed by other platforms and languages and whether or not they're appropriate to use. We will also look at how state management fits into application architectures such as MVP and MVVM.\nAttendees of this talk should already be comfortable with reactive programming and RxJava's APIs.", "confName": "Devoxx, US 2017", "title": "The State of Managing State with RxJava"}, {"url": "https://cfp.devoxx.us/2017/talk/GUW-7724/Containerless_in_the_Cloud_with_AWS_Lambda", "abstract": "Amazon Lambda is shaking-up Java server-side development. Now you can write services in the cloud without having to think about app servers or containers. This is revolutionary. This session will cover Amazon Lambda and some of the other services that will reduce the about of code and infrastructure you have to write and maintain. With Amazon Lambda you can write Java code and expose it as web services in the cloud or connect it to Amazon\u2019s high availability JMS service. Amazon\u2019s mantra is that everything in the cloud should be exposed as an API and we\u2019ll see how Lambda ties into Amazon\u2019s databases, VPCs, etc. I will also touch on how and where Java EE fits into this puzzle and whether you still need a container. This session provides an overview of the services available on AWS and best practices for Java developers.", "confName": "Devoxx, US 2017", "title": "Containerless in the Cloud with AWS Lambda"}, {"url": "https://cfp.devoxx.us/2017/talk/WXR-6769/Typing_in_Java,_Kotlin_and_Scala:_A_quick_comparison", "abstract": "There are several languages which are powered by the JVM. What are the main differences between their type systems? This session will compare bytecode generated by Java, Kotlin and Scala, analyse compilation and execution time, and explore the behaviour of generics and type inference. We will compare and contrast code samples to help understand how each of these languages handle types.", "confName": "Devoxx, US 2017", "title": "Typing in Java, Kotlin and Scala: A quick comparison"}, {"url": "https://cfp.devoxx.us/2017/talk/TRS-9820/Reactive_programming_in_Angular_2", "abstract": "The Angular 2 framework includes RxJS, which is a library of reactive extensions built on the premise that everything is an observable stream. Observables allow to introduce the push model in data processing of your applications. First you\u2019ll get familiar with the RxJS library, and then we\u2019ll continue reviewing the use of observables in Angular 2. You\u2019ll see how to treat UI events, HTTP, and WebSocket connections as observable streams that push data.", "confName": "Devoxx, US 2017", "title": "Reactive programming in Angular 2"}, {"url": "https://cfp.devoxx.us/2017/talk/RNK-9521/Developing_Java_Applications_with_the_Eclipse_IDE,_Neon_Edition", "abstract": "The Eclipse Java IDE is the product of work done by several Eclipse open source projects that coordinate their efforts via an annual simultaneous release. In this session, we'll discuss some of the cool features in 2016's Neon release and provide a preview of what's exciting in 2017's Oxygen release (which will include, among other things, support for Java 9).  In addition to the new features, we'll show off some cool features (like super-smart code completion, integration with Gerrit, and many tips and tricks) that you may have missed to show you how to be just a bit more productive with your Eclipse Java IDE.", "confName": "Devoxx, US 2017", "title": "Developing Java Applications with the Eclipse IDE, Neon Edition"}, {"url": "https://cfp.devoxx.us/2017/talk/BKG-2405/Scaling_Reliability:_So_You_Want_to_Add_a_9", "abstract": "We choose microservice architectures for many different reasons, including, often, improving reliability. However, there is a dark side. Modular systems have many benefits, but as you add more components, each of which can fail, it makes the overall system more fragile, because there are new ways in which it can fail that previously didn't exist. From its inception, Finagle was designed as a toolkit for reliable systems. We'll discuss understanding the reliability of your system (monitoring! load tests! service level objectives!), how to recover when your system fails (alerts! rollbacks! rolling restarts! failovers!), how to make a system reliable (retries! backpressure! circuit breakers!), and how to debug a reliability problem (tracing! logs! persistence!).", "confName": "Devoxx, US 2017", "title": "Scaling Reliability: So You Want to Add a 9"}, {"url": "https://cfp.devoxx.us/2017/talk/SSS-9190/Developer_on_the_Rise_%E2%80%93_Part_1:_Blurring_the_line_between_Developer_and_Data_Scientist_with_PixieDust", "abstract": "Ready to dip your toe into data science? Yes? But where and how do you start?  Well we have an answer \u2013 Notebooks and PixieDust!  PixieDust is a new open source library that helps data scientists and developers working in Jupyter Notebooks and Apache Spark be more efficient. PixieDust speeds data manipulation and display with features like auto-visualization of Spark DataFrames , realtime Spark Job progress monitoring directly from the Notebook, seamless integration to cloud services and automated local install of Python and Scala kernels running with Spark. And if you prefer working with a Scala Notebook - no problem!  PixieDust can also run on a Scala Kernel - imagine being able to visualize your favorite Python chart engines from a Scala Notebook!\nJoin us for this workshop and learn how you can use this tool in your own projects to visualize and explore data effortlessly with no coding. As a bonus we\u2019ll finish with a demo combining Twitter, Watson Tone Analyzer, Spark Streaming, and some fun real-time visualizations-all running within a Notebook.", "confName": "Devoxx, US 2017", "title": "Developer on the Rise \u2013 Part 1: Blurring the line between Developer and Data Scientist with PixieDust"}, {"url": "https://cfp.devoxx.us/2017/talk/ZAE-7856/Reactive_Programming_in_Java", "abstract": "Reactive Programming in gaining a lot of excitement. Many libraries, tools, and frameworks are beginning to make use of reactive libraries. Besides, applications dealing with big data or high frequency data can benefit from this programming paradigm.  Come to this presentation to learn about what reactive programming is, what kind of problems it solves, how it solves them. We will take an example oriented approach to learning the programming model and the abstraction.", "confName": "Devoxx, US 2017", "title": "Reactive Programming in Java"}, {"url": "https://cfp.devoxx.us/2017/talk/EXU-5509/Creating_new_experiences_for_people_in_a_world_of_intelligent_machines", "abstract": "In an increasingly connected world, AI becomes the invisible fabric that ties together people\u2019s life experiences. But what is AI, and how will people interact with it? What are the opportunities and risks for people living in a world of intelligent systems? What is intelligence and what is artificial? Let\u2019s get ahead of the technology curve by having artists and designers apply creativity and design thinking to map out critical emotional, physical, and experiential territories to foster a humanistic evolution of intelligent systems.", "confName": "Devoxx, US 2017", "title": "Creating new experiences for people in a world of intelligent machines"}, {"url": "https://cfp.devoxx.us/2017/talk/AGA-7288/Architecting_for_Failures_in_Microservices:_Patterns_and_Lessons_Learned", "abstract": "Microservices is the new black. Distributed systems fail in the most spectacular ways, and hence architecting for failures is of utmost importance. Assume that everything will fail, and design backwards. Using examples of real life outages and failures, this session covers best practices for building resilient, stable, and predictable services as the cornerstones of working with microservice-based architectures.\nKey Takeaways are:\nExpect the unexpected.\nDismiss nothing when it comes to debugging issues.\nIdentify systemic weaknesses and take control of failures before they take control.\nPlan for resiliency through the stages of development to production and post production.", "confName": "Devoxx, US 2017", "title": "Architecting for Failures in Microservices: Patterns and Lessons Learned"}, {"url": "https://cfp.devoxx.us/2017/talk/TMV-3761/Docker_Swarm_or_Kubernetes_%E2%80%93_Pick_your_framework!_", "abstract": "Docker and Kubernetes are two very competent, and one of the most heavily used, container orchestration frameworks. This code-driven session will compare and contrast Docker Swarm and Kubernetes on the following aspects:\n\nLocal development\nDeployment options\nMulti-container applications\nService discovery\nScaling service\nRun-once jobs\nMaven integration\nRolling updates\nCreating a Couchbase cluster\n\nAttendees will have a clear understanding of what each orchestration framework has to offer. They will also learn techniques for using these platforms effectively.", "confName": "Devoxx, US 2017", "title": "Docker Swarm or Kubernetes \u2013 Pick your framework! "}, {"url": "https://cfp.devoxx.us/2017/talk/XIA-0432/Cloud_Native_Java", "abstract": "\u201cIt is not necessary to change. Survival is not mandatory.\u201d -W. Edwards Deming\nWork takes time to flow through an organization and ultimately be deployed to production where it captures value. It\u2019s critical to reduce time-to-production. Software - for many organizations and industries - is a competitive advantage.\nOrganizations break their larger software ambitions into smaller, independently deployable, feature -centric batches of work - microservices. In order to reduce the round-trip between stations of work, organizations collapse or consolidate as much of them as possible and automate the rest; developers and operations beget \u201cdevops,\u201d cloud-based services and platforms (like Cloud Foundry) automate operations work and break down the need for ITIL tickets and change management boards.\nBut velocity, for velocity\u2019s sake, is dangerous. Microservices invite architectural complexity that few are prepared to address. In this talk, we\u2019ll look at how high performance organizations like Ticketmaster, Alibaba, and Netflix make short work of that complexity with Spring Boot and Spring Cloud.", "confName": "Devoxx, US 2017", "title": "Cloud Native Java"}, {"url": "https://cfp.devoxx.us/2017/talk/YHY-1965/Robots_for_the_Kid_in_All_of_Us", "abstract": "What would you do if you had to write a Java program that solves a 10 x 10 maze with a robot in 64 MB of RAM (not gigabytes) and not have it pause? This session\u2019s speakers faced a similar situation while writing a path finding algorithm on a Lego Mindstorms EV3. The EV3 comes with only 64 MB of RAM with a microprocessor. After finding a creative solution, they realized that some commonly faced problems as well as some complex algorithms can be solved within these memory constraints.\nIn this session, they program a Lego Mindstorms EV3 with Java and use the robot, as well as a few other fun contraptions, to demonstrate solutions to common developer problems.\nThey also integrate a Raspberry Pi with the Twitter API.\nThe session is designed to be fun and creative.", "confName": "Devoxx, US 2017", "title": "Robots for the Kid in All of Us"}, {"url": "https://cfp.devoxx.us/2017/talk/QKL-2419/Rust_for_Java_developers", "abstract": "A quick introduction to the Rust Language. Code comparisons between Java and Rust, compiler features, type system, environment and integrating the two languages.\nTopics\n\nBrief History of Rust - how did the project get started, main goals, first stable releases.\nMain types and Functions - writing a very basic code and a deep comparison between Java style and Rust style. The level of verbosity is similar; however, the way you explicit the types may be different.\nStructs and Traits, contrasting them with Interfaces and Abstract Classes in Java.\nLifetime vs GC - how can we remove objects from the memory without a GC? An interesting alternative approach from Rust to Java's GC. We will show the good and the complicated parts.\nNotes about the compiler", "confName": "Devoxx, US 2017", "title": "Rust for Java developers"}, {"url": "https://cfp.devoxx.us/2017/talk/SSF-9137/Building_reactive_microservices_with_Vert.x_3.3_and_further", "abstract": "Vert.x is the reactive programming toolkit for the JVM. It provides a full stack environment for building microservices environments, using different JVM languages like Java, Groovy, Ruby and JavaScript. Due to its event driven nature, it enforces developers to think in components. It scaled beautifully, both horizontal and vertical.\nVert.x is continually improving and the team is constantly adding new features. In this session we will look at the new features in Vert.x 3.3, which adds support for Service discovery, integration with Kubernetes, HTTP2 support and an implementation of the Circuit Breaker pattern. We also look at the future of Vert.x of version 3.4 and beyond.", "confName": "Devoxx, US 2017", "title": "Building reactive microservices with Vert.x 3.3 and further"}, {"url": "https://cfp.devoxx.us/2017/talk/XTW-1281/Developer_on_the_Rise_%E2%80%93_Part_2:__Being_serverless_and_Swift..._Is_that_allowed%3F", "abstract": "Of course its allowed - just matters how you do it. In this part of the workshop we\u2019ll start with serverless:  New cloud programming models enabled by serverless architectures are emerging, allowing developers to focus more sharply on creating their applications and less on managing their infrastructure. The OpenWhisk project started by IBM and now part of Apache provides an open source platform to enable these cloud native, event-driven applications. In this talk, we will provide an overview of serverless architectures, introduce the OpenWhisk programming model, and then show how to deploy an OpenWhisk application on IBM Bluemix OpenWhisk.\nThen we\u2019ll get Swift!  It\u2019s not only a language you turn to to build your iOS application, but it can also be the language you can use to build your backend. This part of the workshop will use a text-based adventure game called \"GameOn\" as an example for building a Server-side Swift App.\nTopics include:\n\u2022    How to create a web service using the IBM Kitura web framework\n\u2022    How to integrate the Watson SDK for Swift into your application\n\u2022    How to dockerize your Swift application and deploy it to Bluemix", "confName": "Devoxx, US 2017", "title": "Developer on the Rise \u2013 Part 2:  Being serverless and Swift... Is that allowed?"}, {"url": "https://cfp.devoxx.us/2017/talk/BEY-6943/My_Slow_Internet_vs._Docker", "abstract": "Ray lived in a 180-sqft (~18m2) micro-studio near New York. It had no kitchen but it does come with free, but slow Wi-Fi. Ray's a Developer Advocate at Google and he travels a lot, often needs to build Docker images on the airplane, in coffee shops, or in hotels with unpredictable Wi-Fi. Learn how Ray adapted to working with large Docker images over slow Wi-Fi by utilizing Docker Machine in the cloud, and a bunch of tips and tricks!\nThis strategy also saved Ray from numerous demoes - he once demoed Docker containers and Kubernetes by tethering to his colleagues' phone connection.\nIn this session, you'll learn about:\n- Docker Machine in the cloud\n- How to reduce your local bandwidth needs when building an image\n- How to use Docker ONBUILD\n- Sharing data between local laptop and a remote Docker machine\n- Strategy w/ ENTRYPOINT and STDIN/STDOUT\n- Working w/ Kubernetes\n- Reducing layer sizes", "confName": "Devoxx, US 2017", "title": "My Slow Internet vs. Docker"}, {"url": "https://cfp.devoxx.us/2017/talk/IEK-0522/The_ISS_position_in_real_time_on_my_mobile_in_less_than_15mn_%3F_Yes,_we_can.", "abstract": "In this talk we will live-code in less than 15 mn a mobile application displaying the ISS position on a map in real time. Impossible? Not with the right tools! On one hand, Streamdata.io and its JavaScript SDK which is able to turn any API into a stream of data in less than 10 lines of code and will give us the ISS position as if we were of board. On the other hand, Ionic, the powerful hybrid mobile framework which will help us to build a highly interactive application, available for all platforms, in less time than it takes to say. I take your bet!", "confName": "Devoxx, US 2017", "title": "The ISS position in real time on my mobile in less than 15mn ? Yes, we can."}, {"url": "https://cfp.devoxx.us/2017/talk/DRE-4164/10_Kotlin_Tricks_in_10(ish)_Minutes", "abstract": "Kotlin is new language growing in popularity as a complement to Java. Its major advantages and features compared to Java are immediately appealing. While it's quick to learn, it also has a lot of small and thoughtful parts which can be harder to discover. This short talk will cover 10 of my favorites with real-world examples. Attendees should come in having seen some Kotlin but looking to learn even more.", "confName": "Devoxx, US 2017", "title": "10 Kotlin Tricks in 10(ish) Minutes"}, {"url": "https://cfp.devoxx.us/2017/talk/FOH-8503/Web_app_that_has_one_billion_face_images_and_Japanese_%22kawaii%22_culture", "abstract": "Our web application contains more than one billion files of young Japanese women's face image. The photos taken with Photo Booth and are sent to our application through the internet. We use Java, Spring Framework and Oracle RAC as well as MogileFS, is open source distributed filesystem for storing images, . We had not expected that our application had so many images when we started developing. I will explain our architecture, mainly forcused on use cases of MogileFS and troubles we've met. And I also will introduce Japanese \"kawaii\" culture. \"kawaii\" includes \"lovable\", \"cute\", or \"adorable\" and the quality of cuteness in the context of Japanese culture. Many Japanese young women take photos with Photo Booth to become more \"kawaii\".", "confName": "Devoxx, US 2017", "title": "Web app that has one billion face images and Japanese \"kawaii\" culture"}, {"url": "https://cfp.devoxx.us/2017/talk/JZO-4776/Writing_an_InfoQ_Mini-Book_with_Asciidoctor", "abstract": "Learn how to use Asciidoctor and Gradle to write a book that can be published as HTML, PDF, EPUB and MOBI. This session leverages my \"infoq-mini-book\" project on GitHub and shows how you can easily write a short technical book and have it published by InfoQ.", "confName": "Devoxx, US 2017", "title": "Writing an InfoQ Mini-Book with Asciidoctor"}, {"url": "https://cfp.devoxx.us/2017/talk/KLD-6739/Understanding_Dagger_2's_Codegen_implementation", "abstract": "Take a peek into Dagger's generated code to better understand Dependency Injection and Dagger 2's recent optimizations. Get an insight into Dagger's design decisions and how it weighs various tradeoffs to implement common patterns consistently and effectively.  Attendees will leave with a better understanding of how Dagger works, as well how the lessons learned can be applied more broadly.", "confName": "Devoxx, US 2017", "title": "Understanding Dagger 2's Codegen implementation"}, {"url": "https://cfp.devoxx.us/2017/talk/WVP-9133/The_Prototyping_Mindset:_Rapidly_Build_High_Value_Prototypes", "abstract": "From the world of Lean Startups, the notion of building a minimum viable product, MVP, seems straightforward as a developer.  Yet, so many development teams struggle to quickly build these prototypes. A growing list of features cause scope creep, temptations to future-proof lead to over-engineering and your project's launch dates keep slipping. We won't even mention the budget.  What can a development team do?\nWhat if we could adopt a prototyping mindset where, as developers, we could distill a product's purpose to its essential features, identify the ideal customer and build a lightweight application to verify it meets their needs, all within a short timeframe?\nAfter years of building product prototypes with this mindset, we've noticed several ways our conventional developer thinking gets in the way.  Join us as we examine each one and contrast it against a prototyping mindset.  Not only will you be able to guide your team on how to build efficient, high-value prototypes, but you may find this approach benefits other types of projects.", "confName": "Devoxx, US 2017", "title": "The Prototyping Mindset: Rapidly Build High Value Prototypes"}, {"url": "https://cfp.devoxx.us/2017/talk/IWQ-3294/Code_Review_vs._Pull_Requests", "abstract": "Code review is a vital tool for any team of a size greater than one. Though it's intuitive that code review breeds better code, there are a couple of other less obvious benefits. Code review is an effective tool to organically share knowledge of your codebase across your team. This lets developers naturally share information about new features, design patterns, APIs, and dependent libraries across the team. In turn, this dissemination of knowledge reduces organizational risk by decreasing your team's \"bus factor\" and breaking down exclusive silos of knowledge held by senior team members. For these reasons, code review is a must for any professional development team.\nAttendees will walk away with a solid understanding of popular code review methodologies, and the knowledge to implement an appropriate code review process for their team, incorporating their current development practices and version control systems. If you're already practicing code review, you'll gain some valuable insight into Atlassian's world-class review processes, and some tips and tricks for improving how your developers collaborate on a shared codebase.", "confName": "Devoxx, US 2017", "title": "Code Review vs. Pull Requests"}, {"url": "https://cfp.devoxx.us/2017/talk/YKB-3470/What%E2%80%99s_New_in_JHipsterLand", "abstract": "JHipster is an application generator that allows you to create monoliths or microservices based on Spring Boot and Angular. It leverages Spring Cloud for microservices and contains best-of-breed JavaScript and CSS libraries for creating your UI. In this session, you\u2019ll learn about what\u2019s new in JHipster. Possible topics include Angular 2, Progressive Web Apps, HTTP/2, JUnit 5 and Spring 5.", "confName": "Devoxx, US 2017", "title": "What\u2019s New in JHipsterLand"}, {"url": "https://cfp.devoxx.us/2017/talk/GLA-4144/Three_years_of_breaking_things_to_make_them_better", "abstract": "For three years PagerDuty has run \"Failure Friday\", a weekly exercise that uses simple failures like killing a process or adding network latency (in our production environment!) to expose problems in our systems and alerting. This talk will share what we've learned in that time: how our fault injection techniques have changed, the best way to get started injecting failures at your company, and how you can use it to improve your software reliability.", "confName": "Devoxx, US 2017", "title": "Three years of breaking things to make them better"}, {"url": "https://cfp.devoxx.us/2017/talk/GLL-2010/_Hacking_&_Hardening_Java_Web_Applications_Workshop", "abstract": "It seems like everyday there is a new headline about a security breach in a major company\u2019s web application. These breaches cause companies to lose their credibility, cost them large sums of money, and those accountable undoubtedly lose their jobs. Security requires you to be proactive. Keep your employer out of the headlines by learning some key security best practices.\nThis hands-on workshop is designed to teach you how to identify and fix vulnerabilities in Java web applications. Using an existing web application, you will learn ways to scan and test for common vulnerabilities such as hijacking, injection, cross-site scripting, cross-site forgery and more. You will learn best practices around logging, error handling, intrusion detection, authentication and authorization. You will also learn how to improve security in your applications using existing libraries, frameworks and techniques to patch and prevent vulnerabilities.", "confName": "Devoxx, US 2017", "title": " Hacking & Hardening Java Web Applications Workshop"}, {"url": "https://cfp.devoxx.us/2017/talk/CMC-8089/Hands-on_with_Kubernetes_-_from_basic_to_advanced_features", "abstract": "Today's technology is moving fast towards using containers and managing a fleet of containers. This session will give hands-on experience with creating containers using Docker and deploy a fleet of containerized Java microservices into Kuberenetes. You'll get to:\n- Build a Java microservice\n- Build Docker container\n- Deploy the container into a private container registry\n- Deploy a fleet of containerized microservices\n- Learn service discovery\n- Perform rolling update, canary, and roll backs\nIn addition, we will also explore advanced features such as:\n- Secret - securely give your application the credentials and configurations\n- Daemon set - run the same workload across all of the cluster nodes\n- PetSet - running stateful applications such as Cassandra or Zookeeper\n- Persistent volume / claims - store persistent data using volume mounts in the pods\n- Health checks - check to see if your application is alive and ready to serve traffic\n- Autoscaling - automatic horizontal pod scaling using CPU utilization metric\nThe lab can be self-paced - pick your own adventure depending on how familiar you are w/ Kubernetes.", "confName": "Devoxx, US 2017", "title": "Hands-on with Kubernetes - from basic to advanced features"}, {"url": "https://cfp.devoxx.us/2017/talk/PBF-6361/TypeScript_2.0_and_Failing_Sooner", "abstract": "TypeScript adds optional static typing and \u201cfuture JavaScript\u201d transpilation, with the recent 2.0 version adding many features for convenient usage and large-scale projects. In this session we show how TypeScript 2.0, alongside tooling, can boost your productivity:\n\nCatch errors early by letting your tooling help you \u201cfail sooner\"\n\nEncode the producer-consumer contract in a lightweight, executable format\n\nDevelop web frontend apps with the latest JavaScript features\n\n\nIn this talk, we\u2019ll show TypeScript with WebStorm, a modern IDE that puts TypeScript to work, in the context of an Angular 2 application.", "confName": "Devoxx, US 2017", "title": "TypeScript 2.0 and Failing Sooner"}, {"url": "https://cfp.devoxx.us/2017/talk/UMS-4120/Eclipse_Collections_Kata_-_a_fun_way_to_learn_the_feature-rich_collections_framework", "abstract": "In this tutorial session, the audience will learn Eclipse Collections by going through the Eclipse Collections Kata. This kata is set up as a series of unit tests which fail. The participants will make them pass using Eclipse Collections. The instructors will discuss the solutions live and explain the concepts behind the iteration patterns in greater detail.\nIteration patterns with Java 8 streams patterns, basic refactoring techniques and memory, performance comparisons will be covered in the tutorial.\nEclipse Collections (formerly known as GS Collections) is an open-source Java collections framework which supplements JDK collections. It was migrated to Eclipse foundation in October 2015. Eclipse collections has both object and primitive containers; rich APIs available for eager and lazy iteration patterns; mutable and immutable collections; and additional container types not available in the JDK, such as Bag and Multimap.\nFor more information on Eclipse Collections visit: http://www.eclipse.org/collections/", "confName": "Devoxx, US 2017", "title": "Eclipse Collections Kata - a fun way to learn the feature-rich collections framework"}, {"url": "https://cfp.devoxx.us/2017/talk/EGL-3348/CDI_2.0:_New_&_Noteworthy", "abstract": "CDI has been around since 2009. It has quite a robust dependency injection feature set that allows it to match both the easy to use feature set and the robust enterprise features that developers need. In this session, we'll look at hands on application development using CDI 2 and the reference implementation, Weld 3.", "confName": "Devoxx, US 2017", "title": "CDI 2.0: New & Noteworthy"}, {"url": "https://cfp.devoxx.us/2017/talk/GIX-1087/Lean_and_Easy_IoT_Applications_with_OSGi_and_Eclipse_Concierge", "abstract": "Modularization of software is key to handling the inherent complexity of distributed applications like for the Internet of Things (IoT) and provide a flexible environment to evolve applications and manage their deployment effectively. OSGi is a popular framework for dynamic modules for the Java language. Eclipse Concierge provides a clean, small and lightweight implementation of the OSGi core framework specification, specifically tailored to embedded systems and IoT. In this talk, we will cover how to use and deploy the Concierge OSGi framework, demonstrate its advantages based on benchmarks and use cases, and discuss many of the new and upcoming features in the Concierge project such as the OSGi REST interface and Cloud Ecosystems reference implementations.", "confName": "Devoxx, US 2017", "title": "Lean and Easy IoT Applications with OSGi and Eclipse Concierge"}, {"url": "https://cfp.devoxx.us/2017/talk/JXY-6860/Reactive_Spring", "abstract": "Spring 5 is almost here! One of the most exciting introductions in this release is support for reactive programming, building on the Pivotal Reactor project to support message-driven, elastic, resilient and responsive services. Spring 5 integrates an MVC-like component model adapted to support reactive processing and a new type of web endpoint, functional reactive endpoints. In this talk, we'll look at the web runtime - which works on a net-new Netty-based runtime or existing Servlet containers - and we'll look at how existing Servlet code can run on the new world, and how to integrate it with existing Spring-stack technologies", "confName": "Devoxx, US 2017", "title": "Reactive Spring"}, {"url": "https://cfp.devoxx.us/2017/talk/PFU-4836/Building_an_Autonomous_Robotic_Vehicle", "abstract": "This talk will show how to relatively painlessly build an autonomous robotic vehicle using Java, 3D printing and off-the-shelf components. The talk is based on the speaker's experience from a small hobby project. After the talk, you should have a good sense of how to go about building a vehicle of your own.\nThe following will be discussed:\n\nHow to choose hardware for a Java-controlled vehicle.\nHow to design for consumer 3D-printers.\nHow to get started with the software development.\nHow to use Java Flight Recorder to record large quantities of data where overhead can cause significant problems.\nHow using Java Flight Recorder saved the speaker ridiculous amounts of time when designing the algorithms.\n\nIf there is enough interest, the speaker would be happy to open source the project.", "confName": "Devoxx, US 2017", "title": "Building an Autonomous Robotic Vehicle"}, {"url": "https://cfp.devoxx.us/2017/talk/AHN-2875/The_Monster_coming_over_the_Hill_-_Enterprise_Coding_is_Dead", "abstract": "Recently within Capgemini, we took part in an exercise to try and understand why the development community is so big on sharing knowledge, compared with other communities.\nThe kudos you get from sharing code has a greater value to your career than the code itself. With sites like Stack Exchange, you can download every snippet of code you\u2019ll ever need. Add this to the Open Source movement, and the growing number of products which generate code from diagrams and GUIs, and there\u2019s a scary conclusion to be drawn:\nTHE CODE WE WRITE HAS NO VALUE.\nSo, what is it that IS of value in what we do? Through a study of IT projects that didn\u2019t require any code to be written at all, I\u2019ll try and distil the skills that underly our job description as developers.", "confName": "Devoxx, US 2017", "title": "The Monster coming over the Hill - Enterprise Coding is Dead"}, {"url": "https://cfp.devoxx.us/2017/talk/LEV-9728/Deep_Android_Integrations", "abstract": "Designing an elegant interface for developers to communicate with your Android app is crucial for building a mobile platform. Ty has been building mobile-focused developer platforms at Evernote, Twitter, and now Uber. In this talk, he'll walk you through many of the best practices that he has accumulated and you\u2019ll find out how to allow third party developers to seamlessly interact with your users\u2019 local data to shortcut more expensive server operations.\nTopics will include building single sign-on, surfacing your local databases, constructing well-defined Intent interfaces, using deep links, and binding services for programmatic communication. Ty will walk you through how to create a well-defined interface in your app \u2013 if that\u2019s something you want to know, don\u2019t miss it!", "confName": "Devoxx, US 2017", "title": "Deep Android Integrations"}, {"url": "https://cfp.devoxx.us/2017/talk/KEX-2264/What's_New_in_Java_EE_Security:_JSR-375_and_Beyond", "abstract": "Come hear about the current state of JSR-375, followed by a discussion of what may be next for Java EE security. This talk will include an update on the status of JSR-375, a description of its major features and APIs, and discussion of the remaining technical issues to be worked out (if any). The talk will conclude with a brief discussion of proposals for additional security features, targeting cloud deployments, that are under consideration for a follow-on JSR.", "confName": "Devoxx, US 2017", "title": "What's New in Java EE Security: JSR-375 and Beyond"}, {"url": "https://cfp.devoxx.us/2017/talk/NWB-0408/Is_Your_JavaScript_Ready_for_the_Enterprise%3F_What_Does_That_Even_Mean%3F", "abstract": "JavaScript in the enterprise? Does that even make sense? After years of developing Java applications in the enterprise, many developers have become curious about what JavaScript can do for them. In this session, you will be introduced to some of the issues that arise when writing a large JavaScript application that needs to meet the needs of the enterprise environment. You will also be introduced to the concepts of modularity, responsive JavaScript, mobile development with JavaScript, as well as a range of JavaScript transpilers. By the end of this session, you will have a thorough understanding of whether JavaScript is a sensible solution for you in developing enterprise JavaScript applications, today.", "confName": "Devoxx, US 2017", "title": "Is Your JavaScript Ready for the Enterprise? What Does That Even Mean?"}, {"url": "https://cfp.devoxx.us/2017/talk/CLE-3298/Functional_Programming_with_Java_8", "abstract": "Java 8 is the most significant change to the language since it's introduction, surpassing changes seen in any of the previous versions. It is not merely syntactical change or addition of a few extra features, it's a paradigm shift. Come to this presentation to learn about the power and capabilities of functional programming using Java 8 and how to benefit from those when building Java applications.", "confName": "Devoxx, US 2017", "title": "Functional Programming with Java 8"}, {"url": "https://cfp.devoxx.us/2017/talk/KIB-4592/Ten_Simple_Rules_for_Writing_Great_Testcases", "abstract": "We've all been there: debugging problems in a test case and silently screaming into the dark.  (Sometimes not even silently.)  Poor test case design can cost you significant time and effort let alone impact the quality of your application or product. Testing is vitally important, but so is having a test suite you can use effectively and can rely on.  This session will take you through the top ten rules for writing effective and reliable testcases.\nThe new kids on the block such as Cloud or Docker and general \"Infrastructure as Code\" style solutions may make you believe old rules are just old. This talk will make you think again. Knowledge gained from personal experience is always best. Learn from these old masters how to design great test cases and maybe you'll never have to visit the dark side again.", "confName": "Devoxx, US 2017", "title": "Ten Simple Rules for Writing Great Testcases"}, {"url": "https://cfp.devoxx.us/2017/talk/CYO-6114/develop_microservices_faster_with_an_open_source_platform_based_on_docker,_kubernetes_and_jenkins", "abstract": "These days time to value is critical. We all need to develop better software and to get it to customers faster. The quicker the software gets to customers, the more iterations and feedback then the more value we create.\nContinuous Delivery of Containerized Microservices is the best approach today for developing better software and iterating fast.\nHowever without a Microservices Platform it can be challenging creating, building, deploying and managing many independent microservices.\nIn this talk we'll introduce the Fabric8 Microservices Platform which is open source, Apache Licensed and built on top of the shoulders of giants; Docker, Kubernetes and Jenkins.\nWe'll demonstrate how to create microservices easily, have them automatically built, tested and staged with Continuous Delivery and deal with the issues of building microservices architectures like service discovery, high availability, auto scaling, rolling upgrades, circuit breakers, tracing, logging and metrics.\nAfter this talk you should be ready to embark on your microservices journey; armed with lots of great open source tools to automate every step of the way - but the writing code part ;)!", "confName": "Devoxx, US 2017", "title": "develop microservices faster with an open source platform based on docker, kubernetes and jenkins"}, {"url": "https://cfp.devoxx.us/2017/talk/WMP-8191/The_Life_and_Death_of_an_Android_Activity", "abstract": "To Android users, an Activity object is an app. And yet, Android developers have little control over the life and death of activities at run time.  Take a journey with me to experience what happens to an Activity\u2019s state and view at runtime in relation to what the user (and the operating system itself) is doing. We will discuss considerations you should make based on this knowledge when designing and building your app. Regardless of whether or are an Android developer or not, you will walk away from this talk with a strong understanding of the most fundamental piece of Android applications.", "confName": "Devoxx, US 2017", "title": "The Life and Death of an Android Activity"}, {"url": "https://cfp.devoxx.us/2017/talk/BCC-2224/Keeping_your_data_sane_with_Bean_Validation_2.0", "abstract": "Rich UIs, schemaless datastores, microservices communicating with each other - the need for powerful and easy-to-use data validation services has never been bigger: guard your services endpoints, your datastore accesses against garbage is important in an analytics shifting universe.\nThe Bean Validation standard is here to help, providing Java developers with a rich validation API based on annotations. Bean Validation 2.0 (JSR 380) takes validation to the next level by leveraging Java 8 features such as lambdas, additional annotation locations and repeatable annotations. This opens up exciting opportunities for Bean Validation - e.g. List<@Email String>. There will also be support for Optional, the java.time API and more. Join us and see what's planned for Bean Validation 2.0 and what's already done. Like its predecessors, JSR 380 is developed fully in the open: come exchange, propose and participate!", "confName": "Devoxx, US 2017", "title": "Keeping your data sane with Bean Validation 2.0"}, {"url": "https://cfp.devoxx.us/2017/talk/NHY-3612/Migrating_to_Java_9_modules", "abstract": "Java 9 comes to your doorstep with major changes to all of us, whether you ordered it or not. The module system in Java 9 is a great advancement for the Java language, and we would like to migrate existing code to make use of the module system. Migrating an exiting code base from the classpath to any kind of module system can be a daunting task however. Not only do we have to take care of migrating our own code to modules, we also have to take third party libraries into consideration.\nJava 9 comes with a number of features to ease migration. This includes automatic modules, the unnamed module and a number of command line arguments. While these features provide great value, they do require deep understanding of the module system to use them to their full potential.\nIn this talk we will look at examples of migrating real code, based on a Spring/Hibernate application. We will face common problems we run into during migration, which gives us practical tips to apply, but also a good understanding of the module framework itself and the various migration features it supports. This talk is an excellent preparation to start migrating your own code.", "confName": "Devoxx, US 2017", "title": "Migrating to Java 9 modules"}, {"url": "https://cfp.devoxx.us/2017/talk/LRN-3691/Navigating_the_React_Solar_System", "abstract": "React just exploded in popularity. But it\u2019s only a UI library, not a full-fledged framework like Angular, Ember or [insert latest JS framework]. We need to create our own \u201cframework\u201d by picking from the plethora of libraries in the React ecosystem. But which ones should we choose? Or better yet, which ones do we actually need? Do we need a Flux implementation? What about handling ES6+, bundling and routing? How does it all come together?!1?!\nLet\u2019s walk through the tools and helper libraries that surround React. You\u2019ll get the most out of the session with familiarity with React and its concepts, but you don\u2019t need to be an expert. By the end of the session, you\u2019ll  have a solid understanding of the ecosystem, know which libraries you should prioritize learning first, and confidently build your own React-based stack.", "confName": "Devoxx, US 2017", "title": "Navigating the React Solar System"}, {"url": "https://cfp.devoxx.us/2017/talk/ZZM-4193/The_Checker_Framework_in_action:_Preventing_errors_before_they_happen", "abstract": "Are you tired of null pointer exceptions, unintended side effects, SQL\ninjections, concurrency errors, mistaken equality tests, and other\nrun-time errors? Are your users tired of them in your code? This\npresentation shows you how to guarantee, at compile time, that these\nruntime exceptions cannot occur. You have nothing to lose but your\nbugs!\nThe Checker Framework provides more than a dozen pluggable type\nsystems that are ready to use, including nullness, immutability, and\nconcurrency type-checkers. These type systems have found hundreds of\nbugs in well-tested open source code, including from Oracle, Google,\nApache, etc., and even when other tools like FindBugs gave the code a\nclean bill of health. The Checker Framework also enables you to create\nyour own new pluggable type system for Java.\nThis short presentation is primarily a demo that concretely shows you\nthe tool in action, helping you to understand how it works and whether\nit is right for you.  You will leave the demo understanding the concepts of\npluggable type-checking and ready to use it to improve your code.\nThe tool is freely available at http://CheckerFramework.org/.\nYou have nothing to lose but your bugs!", "confName": "Devoxx, US 2017", "title": "The Checker Framework in action: Preventing errors before they happen"}, {"url": "https://cfp.devoxx.us/2017/talk/EJW-5014/MOAR_IntelliJ_IDEA_Tips_and_Tricks", "abstract": "Want to really know your IDE inside-out and see how to get into the flow of things when working? Want to understand the difference between an editor and an IDE and how the latter can give you the advantage of understanding the semantics of your applications? Want to be efficient (even productive) with your tooling? Then you know where to come.", "confName": "Devoxx, US 2017", "title": "MOAR IntelliJ IDEA Tips and Tricks"}, {"url": "https://cfp.devoxx.us/2017/talk/IEW-9089/Binge-streaming_your_Web_API", "abstract": "In a fast-paced fashion, to keep you awake after long University sessions, Audrey and Guillaume will set you up to create a Web API using Google Cloud Endpoints, and stream the content of the API in real-time with Streamdata.io. After a quick introduction to both technologies, they\u2019ll build together both the backend and the front-end to interact live with the audience, through the Web or via a mobile app.", "confName": "Devoxx, US 2017", "title": "Binge-streaming your Web API"}, {"url": "https://cfp.devoxx.us/2017/talk/JOQ-8664/Operational_Service_Views_-_Reactive_Web_Programming_with_Baratine", "abstract": "Asynchronous and non-blocking execution is a highly coveted attribute of high volume web services. Server side web services strive to make contractual agreements upon interface based APIs to other services, assuming their environments to be highly-available, recoverable, & loosely-coupled. However these attributes are often in direct disagreement with an APIs implementation given: (1) the underlying multi-threaded libraries an API must rely upon and (2) the outside data source whose assets must be operated upon before an API can complete.\nIn this talk I introduce Baratine, an asynchronous web framework with an improved thread and data execution model. By only accessing data for a particular service on a single thread, Baratine provides an authoritative owner of data services to be operated on continuously, solving both (1) & (2) sources of the aforementioned bottleneck.\nThese services can persist no state operating entirely in-memory, persist to Baratine\u2019s internal reactive document-style database or choose to persist to a traditional outside datasource.  In this talk I will cover many use cases integrating Baratine with JEE.", "confName": "Devoxx, US 2017", "title": "Operational Service Views - Reactive Web Programming with Baratine"}, {"url": "https://cfp.devoxx.us/2017/talk/FRB-7980/EAVP:_Scientific_Visualization_Integrated_into_Eclipse_Workbenches", "abstract": "The Eclipse Advanced Visualization Project (EAVP) allows for several diverse visualization capabilities to be added to an Eclipse workbench. Third party visualization tools such as VisIt or ParaView can be used as a backend to visualize simulation results that are then displayed inside of Eclipse. Also implemented are Mesh and Geometry Editors using JavaFX for 3D graphics. These allow for the creation and editing of data and are compatible with a variety of file types including .vtk, .stl, and .obj. All visualizations are offered through a service oriented architecture. These services allow for the visualizations to be drawn into custom placements in an Eclipse RCP app. EAVP allows for quick and easy visualization of scientific results.", "confName": "Devoxx, US 2017", "title": "EAVP: Scientific Visualization Integrated into Eclipse Workbenches"}, {"url": "https://cfp.devoxx.us/2017/talk/BMP-5070/Cassandra_-_an_introduction", "abstract": "Built mostly in Java, Cassandra is a powerful open source NoSQL database, based on the model of partitioned row store. This talk will provide general uses cases, Cassandra architecture, benefits, tools and integration with existing Java applications.\nTopics\n\nCassandra - brief history\nArchitecture, use cases and benefits\nCoordination\nReplication\nKeyspaces\nData Model - Oder By, Secondary Indexes, UUID and Timestamps\nInsert, Update, Delete\nWrite Path\nRead Path", "confName": "Devoxx, US 2017", "title": "Cassandra - an introduction"}, {"url": "https://cfp.devoxx.us/2017/talk/XZI-2824/Behavior_driven_integration_with_Cucumber_and_Citrus", "abstract": "The concept of behavior driven development (BDD) is quite simple. Business analysts and domain experts describe how the application should behave using Gherkin (given-when-then) feature stories. Developers glue those specifications to automated tests.\nCan we use this approach when testing the integration of services, too? The talk gives answers with a combination of the frameworks Cucumber and Citrus. After a short introduction to both frameworks we discuss the concepts and see some code examples that demonstrate how the behavior driven approach fits to testing the messaging integration with Http REST, JMS and mail communication.\nAt the end we will have an automated integration test with BDD and almost no glue code to write manually.", "confName": "Devoxx, US 2017", "title": "Behavior driven integration with Cucumber and Citrus"}, {"url": "https://cfp.devoxx.us/2017/talk/EXT-4694/More_Java_Community_Insider_Secrets!", "abstract": "You ever wonder how to start your own Java User Group?  Maybe how to become a Java Champion or JavaOne Rock Star?  Did you ever wonder how you could get published in Java Magazine?  Perhaps you were interested to know how join the JCP and sit on an Expert Group.  In this presentation you will learn all of the insider secrets on how to become a presence in the worldwide community of 9 million Java developers.\nLast year some of your conference peers attended this Rock Star award-winning talk and are now doing:\n\nConference speaking at exotic venues in Brazil and Africa\nCommunity networking at a theme park in Germany\nLive-streamed motorcycle tours in far-away places like Japan\n\nCome learn how the Java Community ticks from someone who has gone from Java coder to Java Champion and now is a humble Java Community Servant.", "confName": "Devoxx, US 2017", "title": "More Java Community Insider Secrets!"}, {"url": "https://cfp.devoxx.us/2017/talk/CPY-3818/Working_with_Exoplayer", "abstract": "In this talk I will talk about our transition from MediaPlayer to ExoPlayer here at Udemy. I will cover the basics of how to start implementing a working ExoPlayer solution with MP4s and HLS videos, and dive further into how we extended ExoPlayer and how we implemented advanced video features with ExoPlayer such as: Background playing, variable speed changes, subtitles and manual and automatic video playing resolutions in HLS and MP4s. ExoPlayer just released V2, so I will also cover V1 to V2 migration and getting started with V2.", "confName": "Devoxx, US 2017", "title": "Working with Exoplayer"}, {"url": "https://cfp.devoxx.us/2017/talk/YXY-9393/Meet_The_Dockers_-_What%E2%80%99s_New_and_What%E2%80%99s_Coming", "abstract": "In the past year, Docker has announced a variety of new software and open source projects:   Swarmkit, an open source orchestration framework; Infrakit, an open source infrastructure management toolkit; low-level container tools like the containerd project; and more.  Docker veterans Patrick Chanezon and Mike Goelzer will reflect on these developments, as well as discuss future directions for Docker.  Bring your Docker questions as moderator Arun Gupta plans to take many audience questions.", "confName": "Devoxx, US 2017", "title": "Meet The Dockers - What\u2019s New and What\u2019s Coming"}, {"url": "https://cfp.devoxx.us/2017/talk/KGP-7104/Changing_wheels_on_moving_car,_from_monolith_to_microservices_by_using_API's", "abstract": "Join me in this talk to hear about my personal experience of transferring monolith business critical application to microservice architecture, with zero downtime, thanks to using API's\nYou will hear, war stories, what went as planed, what were wrong. Hopefully you will enjoy them, have a laugh and learn new things.\nYou will leave this talk with more knowledge and experience about this subject, and how to solve this problems if you encounter them in your day to day work.", "confName": "Devoxx, US 2017", "title": "Changing wheels on moving car, from monolith to microservices by using API's"}, {"url": "https://cfp.devoxx.us/2017/talk/JVD-8929/Peer_Learning", "abstract": "Engineers have many choices when it comes to picking up skills on new languages and frameworks. However, internal systems are usually poorly understood. Tools and libraries build in-house don't have viable documentation. This causes engineers to feel stuck and unproductive.\nPeer Learning is a framework for sharing internal knowledge at scale. It is a set of best practices to enable engineers to give talks on knowledge worth sharing.\nIn this talk, you will learn how to create a culture where engineers learn from one another. This will help your team be more productive and increase the moral of the organization.", "confName": "Devoxx, US 2017", "title": "Peer Learning"}, {"url": "https://cfp.devoxx.us/2017/talk/COD-6669/Don't_just_Embrace_Change,_Create_Change", "abstract": "We know technology can change the world.  We've seen it from the Industrial Revolution to the impact of social media on elections.\nThe question is:\ncan we do better?\nCan we help people enact the sorts of changes they really want to see?\nCan we bring people together, encourage empathy, help bridge divides to build better societies?\nThis Birds of a Feather session is an opportunity to come together to decide actions that we, developers, can take to promote the sort of change we want to see in the world.", "confName": "Devoxx, US 2017", "title": "Don't just Embrace Change, Create Change"}, {"url": "https://cfp.devoxx.us/2017/talk/TWN-8682/Streams_in_JDK_8:_The_Good,_The_Bad_and_The_Ugly", "abstract": "The streams API combined with lambda expressions, both introduced in JDK 8, provide a way for developers to use a functional style of programming for the first time in Java.  As with all powerful features like this, it is easy to abuse them and produce code that is difficult to read and hard to maintain.\nIn this BoF we\u2019ll use examples of streams to discuss whether the code is good, bad or ugly and talk about ways the code could be changed.  No doubt, this will lead to some interesting discussions!\nIf you have examples of stream code you think would be good to discuss please feel free to bring them along.", "confName": "Devoxx, US 2017", "title": "Streams in JDK 8: The Good, The Bad and The Ugly"}, {"url": "https://cfp.devoxx.us/2017/talk/VCW-6975/Dagger_2_on_Android", "abstract": "Dagger 2 is Google's solution for dependency injection on Android.  It powers some of the largest and most successful applications from Google and others, but applying it has been fraught with ambiguity and ad hoc solutions that require a lot of up-front engineering.\nIn an effort to make it a viable solution for more projects, the Dagger team at Google has focused specifically on creating new features, libraries and well-documented patterns for using Dagger 2 in an Android application.  The result is a structure that allows Android applications to be modular, testable, and performant with minimal boilerplate and infrastructure.\nThis is an overview of what has been added, how it was designed and how to apply it.  Attendees should leave with a clear understanding the benefits of dependency injection in an Android app and how Dagger 2 can help realize those benefits most simply and effectively.", "confName": "Devoxx, US 2017", "title": "Dagger 2 on Android"}, {"url": "https://cfp.devoxx.us/2017/talk/FDO-8838/Chat_with_the_Java_Cloud_Platform_core_developers", "abstract": "App Engine is developed in the San Francisco office. Tooling is done in NYC. Spend an hour with the core developers and discover what are the challenges with adding multiple tooling environment (Maven, Gradle, Eclipse, Intelij) and  running massively scalable Java applications in a fully hosted environment.", "confName": "Devoxx, US 2017", "title": "Chat with the Java Cloud Platform core developers"}, {"url": "https://cfp.devoxx.us/2017/talk/GLI-0548/Node.js_-_ask_us_anything!", "abstract": "You'll have some captive Node.js/V8 collaborators, and you can ask them anything! Confused about the LTS plans, wondering what is happening in the Node workgroups, want to know what is really going to happen with Webworkers, what's the future of Promises in Node.js? Wondering how to debug your production failures? Ask us anything, and we'll try and answer!", "confName": "Devoxx, US 2017", "title": "Node.js - ask us anything!"}, {"url": "https://cfp.devoxx.us/2017/talk/NNF-4430/Meet_and_greet_Duchess_an_unconference", "abstract": "Duchess is a global organization for women in Java technology, currently with 550 members in over 60 countries. Duchess provides a platform through which women who work with Java can connect with each other and get involved in the greater Java community. It aims to make the role of women and the individual women's contributions visible in the Java community and to teach the benefits of diversity in any team environment - whether corporate or open-source.\nThis birds of a feather will be a meet and greet for everyone interested in Duchess and women in the Java eco-system. We will discuss almost anything that comes up.", "confName": "Devoxx, US 2017", "title": "Meet and greet Duchess an unconference"}, {"url": "https://cfp.devoxx.us/2017/talk/FTT-9366/Getting_Started_with_Apache_Spark_2.0_and_MLlib,_for_Java_developers", "abstract": "A practical introduction to Apache Spark for Java developers. We provide an overview of the main components of Spark and show how to get going with your first application using MLlib, the scalable machine learning library that is a core component of Spark. New features of Spark 2.0 will be highlighted. You\u2019ll see code running in a local Spark development environment as well as in a Spark cluster. The session demonstrates development and monitoring tools provided with Spark and provides hints about overcoming initial hurdles.", "confName": "Devoxx, US 2017", "title": "Getting Started with Apache Spark 2.0 and MLlib, for Java developers"}]